{"version":3,"sources":["AppMode.js","components/Dropdown.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/CreateEditAccountDialog.js","components/ConfirmDeleteAccount.js","components/ResetPasswordPage.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPostReply.js","components/FeedPostItem.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/CoursesPage.js","components/AboutBox.js","components/RegisterPage.js","components/GradeTable.js","components/GradesPage.js","components/Assignment.js","components/AssignmentsPage.js","components/AnalyticsPage.js","components/CourseSettingsPage.js","components/UsersList.js","components/UsersPage.js","components/HelpPage.js","components/MailPage.js","components/ProfilePage.js","components/DeleteCoursePage.js","components/Course.js","components/FindCoursePage.js","components/UserSettingsPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","HELP","MAIL","PROFILE","RESET","ASSIGNMENTS","GRADES","USER_SETTINGS","COURSE_SETTINGS","CREATE_COURSE","DELETE_COURSE","FIND_COURSE","ANALYTICS","USERS","REGISTER","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","Dropdown","props","logOut","changeMode","className","role","style","width","this","displayMenu","type","href","onClick","React","Component","NavBar","toggleShowDropdown","newType","setState","prevState","setType","switchMode","newMode","renderStudentMode","mode","dashboard","assignments","grades","renderInstructorMode","togglecoursedropdown","prevstate","coursedropdown","userdropdown","toggleuserdropdown","gotopage","string","renderRightItems","state","ref","namewidth","display","flexDirection","top","borderRadius","current","offsetWidth","renderDropdown","createRef","padding","src","alt","height","SideMenu","renderModeMenuItems","menuOpen","toggleMenuOpen","profilePicURL","id","displayName","localAccount","editAccount","showAbout","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","handleChange","event","formUpdated","origAccountInfo","formIsUpdated","target","name","value","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","deleteAccount","confirmDelete","confirmDeleteAccount","e","newUserRef","userId","json","parse","ResetPasswordPage","resetPasswordRef","resetPasswordRepeatRef","resetPassword","focus","errorMsg","checkForSubmit","code","position","right","cancelResetPassword","onSubmit","placeholder","pattern","onKeyUp","LookUpAccountDialog","handleLookUpAccount","emailRef","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","size","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","rows","cols","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","accountCreateDone","msg","statusMsg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPasswordPage","handleOAuthLogin","provider","window","open","handleOAuthLoginClick","setTimeout","pw","showResetPaswordDialog","deleted","closeStatusMsg","reset","signUp","emailInputRef","passwordInputRef","githubIcon","githubLabel","loginMsg","newAccountCreated","htmlFor","fontSize","fontWeight","backgroundColor","required","cancel","FeedpostReply","key","boxShadow","margin","marginLeft","createdby","content","FeedpostItem","showReply","addreply","newpost","_inputElement","Date","now","replies","concat","seeReplies","createntries","entry","JSXreplies","map","marginBottom","listStyleType","FeedPage","addpost","isanonymous","posts","toggledropdown","showdropdown","changeselected","newfilter","curselected","setanonymous","userid","JSXposts","float","marginTop","ConfirmDeleteRound","close","deleteRound","RoundsTable","editRound","setEditId","showConfirmDelete","setDeleteId","renderTable","table","r","push","rounds","date","substring","course","Number","strokes","minutes","seconds","keys","colSpan","fontStyle","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","min","sec","today","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","onChange","maxLength","max","disabled","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","closeErrorMsg","icon","CoursesPage","AboutBox","textAlign","RegisterPage","createAccount","handleRegister","email","confirm_email","confirm_password","first_name","confirm_first_name","last_name","confirm_last_name","confirm_id","handleOnChange","school","confirm_emailRef","passwordRef","confirm_passwordRef","fnameRef","confirm_fnameRef","lnameRef","confirm_lnameRef","IDRef","confirmIDRef","validated","color","autocomplete","GradeTable","getKeys","data","getHeader","index","toUpperCase","getRowsData","items","row","bind","RenderRow","GradesPage","hasGradebook","class","data-toggle","data-target","Assignment","borderBottom","assignment","duedate","didsubmit","latestactivity","AssignmentsPage","JSXassignments","paddingLeft","AnalyticsPage","CourseSettingsPage","UsersList","getListData","uID","userName","RenderListItem","boxName","UsersPage","getUserLists","roles","classData","1","2","3","4","5","6","courseId","HelpPage","MailPage","datetime","data-original-date","data-date-format","ProfilePage","DeleteCoursePage","Course","coursename","coursenumber","semester","instructor","FindCoursePage","courses","JSXcourses","UserSettingsPage","modeTitle","modeToPage","Register","ResetPassword","Grades","Users","Analytics","Assignments","CourseSettings","Help","Mail","Profile","DeleteCourse","FindCourse","UserSettings","App","handleChangeMode","openMenu","closeMenu","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","editAccountDone","showAboutDialog","then","isAuthenticated","user","ModePage","users","analytics","settings","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gZAGMA,EAAU,CACZC,MAAO,YACPC,KAAM,WACNC,KAAM,WACNC,QAAS,cACTC,MAAO,YACPC,YAAa,kBACbC,OAAQ,aACRC,cAAe,mBACfC,gBAAkB,qBAClBC,cAAe,mBACfC,cAAe,mBACfC,YAAa,iBACbC,UAAW,gBACXC,MAAO,YACPC,SAAW,eACXC,KAAM,WACNC,OAAQ,aACRC,gBAAiB,sBACjBC,iBAAkB,uBAClBC,QAAS,eAGbC,OAAOC,OAAOtB,GAECA,QCoBAuB,G,wDA3Cf,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAKPC,OAAS,WACP,EAAKD,MAAME,WAAW1B,EAAQC,QAPd,E,qDAYN,IAAD,OACP,OACI,yBAAM0B,UAAU,iBAAiBC,KAAK,SAASC,MAAS,CAACC,MAAM,UAE3DC,KAAKP,MAAMQ,YAAkC,WAAnBD,KAAKP,MAAMS,KACzC,wBAAIN,UAAY,gBACf,wBAAIA,UAAY,YAAW,uBAAGA,UAAU,SAASO,KAAK,gBAAgBC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQG,QAAvF,YAC3B,wBAAIwB,UAAY,YAAW,uBAAGO,KAAK,YAAYC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQI,WAAhE,iBAC3B,wBAAIuB,UAAY,YAAW,uBAAGO,KAAK,YAAYC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQQ,iBAAhE,aAC3B,wBAAImB,UAAY,WAAWQ,QAASJ,KAAKN,QAAQ,uBAAGS,KAAK,YAAR,cAIhD,wBAAIP,UAAY,gBACf,wBAAIA,UAAY,YAAW,uBAAGA,UAAU,SAASO,KAAK,eAAeC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQY,eAAtF,gBAC3B,wBAAIe,UAAY,YAAW,uBAAGO,KAAK,iBAAiBC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQS,mBAArE,kBAC3B,wBAAIkB,UAAY,YAAW,uBAAGO,KAAK,iBAAiBC,QAAS,kBAAK,EAAKX,MAAME,WAAW1B,EAAQW,iBAArE,oBAK5B,U,GAlCayB,IAAMC,YC+NdC,G,wDA9Nb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAYRe,mBAAqB,SAACC,GACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEV,aAAcU,EAAUV,gBACtD,EAAKW,QAAQH,IAfI,EAkBnBI,WAAa,SAACC,GACZ,EAAKrB,MAAME,WAAWmB,IAnBL,EAsBnBF,QAAU,SAACH,GACT,EAAKC,SAAS,CAAER,KAAMO,KAvBL,EA0BnBM,kBAAoB,WAClB,OACE,6BACE,8CACA,0BAAMnB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQgB,KAAO,6BAA+B,eAAgBmB,QAAS,kBAAM,EAAKS,WAAW5C,EAAQgB,QAAzI,OACS,EAAKQ,MAAMwB,UADpB,QAGA,8CAEA,0BAAMrB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQM,YAAc,6BAA+B,eAAgB6B,QAAS,kBAAM,EAAKS,WAAW5C,EAAQM,eAAhJ,OACS,EAAKkB,MAAMyB,YADpB,QAGA,8CAEA,0BAAMtB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQO,OAAS,6BAA+B,eAAgB4B,QAAS,kBAAM,EAAKS,WAAW5C,EAAQO,UAA3I,OACS,EAAKiB,MAAM0B,OADpB,UAxCa,EA+CnBC,qBAAuB,WACrB,OACE,4CAEE,4BAAQxB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQgB,KAAO,qCAAuC,4BAA6BmB,QAAS,kBAAM,EAAKS,WAAW5C,EAAQgB,QAAhK,aACA,4BAAQW,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQM,YAAc,qCAAuC,4BAA6B6B,QAAS,kBAAM,EAAKS,WAAW5C,EAAQM,eAAvK,eACA,4BAAQqB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQO,OAAS,qCAAuC,4BAA6B4B,QAAS,kBAAM,EAAKS,WAAW5C,EAAQO,UAAlK,UACA,4BAAQoB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQc,MAAQ,qCAAuC,4BAA6BqB,QAAS,kBAAM,EAAKS,WAAW5C,EAAQc,SAAjK,SACA,4BAAQa,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQS,gBAAkB,qCAAuC,4BAA6B0B,QAAS,kBAAM,EAAKS,WAAW5C,EAAQS,mBAA3K,mBACA,4BAAQkB,UAAW,EAAKH,MAAMuB,MAAQ/C,EAAQa,UAAY,qCAAuC,4BAA6BsB,QAAS,kBAAM,EAAKS,WAAW5C,EAAQa,aAArK,eAxDa,EAkGnBuC,qBAAuB,WACrB,EAAKX,UAAS,SAAAY,GAAS,MAAK,CAAEC,gBAAiBD,EAAUC,eAAgBC,cAAc,OAnGtE,EAqGnBC,mBAAqB,WACnB,EAAKf,UAAS,SAAAY,GAAS,MAAK,CAAEE,cAAeF,EAAUE,aAAcD,gBAAgB,OAtGpE,EAwGnBG,SAAW,SAACC,GACI,gBAAVA,EACF,EAAKlC,MAAME,WAAW1B,EAAQW,eAEb,cAAV+C,EACP,EAAKlC,MAAME,WAAW1B,EAAQY,aAEb,QAAV8C,EACP,EAAKlC,MAAME,WAAW1B,EAAQG,MAEb,WAAVuD,EACP,EAAKlC,MAAME,WAAW1B,EAAQI,SAEb,YAAVsD,EACP,EAAKlC,MAAME,WAAW1B,EAAQQ,eAEb,UAAVkD,EACP,EAAKlC,MAAME,WAAW1B,EAAQC,OAEb,gBAAVyD,GACP,EAAKlC,MAAME,WAAW1B,EAAQS,iBAGhC,EAAKgC,SAAS,CACZa,gBAAgB,EAChBC,cAAc,KAjIC,EAoInBI,iBAAmB,WAEjB,OAEE,6BACE,4BAAQhC,UAAU,4BAA4BE,MAAO,CAAEC,MAAO,UAAYK,QAAS,EAAKiB,sBAAxF,gBAEA,0BAAMzB,UAAwC,GAA7B,EAAKiC,MAAMN,eAAyB,gCAAkC,mCAGvF,4BAAQ3B,UAAU,4BAA4BkC,IAAK,EAAKC,UAAW3B,QAAS,EAAKqB,oBAAjF,uBAEA,0BAAM7B,UAAsC,GAA3B,EAAKiC,MAAML,aAAuB,gCAAkC,mCACrF,4BAAQ5B,UAAU,4BAA4BQ,QAAS,kBAAM,EAAKS,WAAW5C,EAAQG,QAArF,QACA,4BAAQwB,UAAU,4BAA4BQ,QAAS,kBAAM,EAAKS,WAAW5C,EAAQE,QAArF,QAEC,EAAK0D,MAAMN,eACV,yBAAKzB,MAAO,CAAEkC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAAUtC,UAAU,iBAC/E,4BAAQA,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,SAAUoC,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,gBAA9H,eACA,4BAAQ9B,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,SAAUoC,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,kBAA9H,iBACA,4BAAQ9B,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,SAAUoC,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,kBAA9H,kBAGF,KAGD,EAAKG,MAAML,aACV,yBAAK1B,MAAO,CAAEkC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAAUtC,UAAU,2BAC/E,4BAAQA,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,EAAKgC,UAAUK,QAAQC,YAAc,EAAGF,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,UAA5J,QACA,4BAAQ9B,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,EAAKgC,UAAUK,QAAQC,YAAc,EAAGF,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,aAA5J,WACA,4BAAQ9B,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,EAAKgC,UAAUK,QAAQC,YAAc,EAAGF,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,cAA5J,YACA,4BAAQ9B,UAAU,8BAA8BE,MAAO,CAAEC,MAAO,EAAKgC,UAAUK,QAAQC,YAAc,EAAGF,aAAc,OAAS/B,QAAS,kBAAM,EAAKsB,SAAS,YAA5J,YAGF,OAtKW,EAsMnBY,eAAiB,WACf,OAAQ,kBAAC,EAAD,OArMR,EAAKP,UAAY1B,IAAMkC,YACvB,EAAKV,MAAQ,CACX5B,aAAa,EACbC,KAAM,GACNqB,gBAAgB,EAChBC,cAAc,GAPC,E,qDA2MT,IAAD,OACP,OACE,yBAAK1B,MAAO,CAAE0C,QAAS,QACrB,yBAAK5C,UAAU,UACb,0BAAMA,UAAU,gBACd,yBAAK6C,IAAI,aAAaC,IAAI,aAAaC,OAAO,OAAOvC,QAAS,kBAAM,EAAKS,WAAW5C,EAAQgB,OAAOc,MAAM,QAAQH,UAAU,iBAE1HI,KAAKoB,wBAER,0BAAMxB,UAAU,sBACbI,KAAK4B,0B,GAtNGvB,IAAMC,YCgEZsC,E,4MA5DfC,oBAAsB,WACpB,OAAQ,EAAKpD,MAAMuB,MACjB,KAAK/C,EAAQgB,KACX,OACE,6BACA,uBAAGW,UAAU,iBACT,0BAAMA,UAAU,gBADpB,sBAEA,uBAAGA,UAAU,kBACT,0BAAMA,UAAU,iBADpB,oBAKJ,KAAK3B,EAAQiB,OACX,OACE,6BACE,uBAAGU,UAAU,iBACX,0BAAMA,UAAU,eADlB,qBAEA,uBAAGA,UAAU,iBACX,0BAAMA,UAAU,iBADlB,sBAKN,KAAK3B,EAAQoB,QACX,OACE,6BACA,uBAAGO,UAAU,iBACT,0BAAMA,UAAU,eADpB,oBAEA,uBAAGA,UAAU,iBACT,0BAAMA,UAAU,iBADpB,uBAIJ,QACI,OAAO,O,uDAKR,OACC,yBAAKA,UAAW,aAAeI,KAAKP,MAAMqD,SAAW,gBAAkB,mBAClE1C,QAASJ,KAAKP,MAAMsD,gBAEvB,yBAAKnD,UAAU,kBACb,yBAAK6C,IAAKzC,KAAKP,MAAMuD,cAAeL,OAAO,KAAK5C,MAAM,OACtD,0BAAMkD,GAAG,SAASrD,UAAU,mBAA5B,OAAqDI,KAAKP,MAAMyD,cAGjElD,KAAK6C,sBAEL7C,KAAKP,MAAM0D,aACV,uBAAGF,GAAG,aAAarD,UAAU,gBAAgBQ,QAASJ,KAAKP,MAAM2D,aAC/D,0BAAMxD,UAAU,eADlB,eAC0D,KAC5D,uBAAGqD,GAAG,WAAWrD,UAAU,gBAAgBQ,QAASJ,KAAKP,MAAM4D,WAC7D,0BAAMzD,UAAU,sBADlB,aAEA,uBAAGqD,GAAG,YAAYrD,UAAU,gBAAgBQ,QAASJ,KAAKP,MAAMC,QAC9D,0BAAME,UAAU,uBADlB,oB,GA1DaS,IAAMC,W,GCCPD,IAAMC,U,aC+VbgD,GCjWoBjD,IAAMC,U,kDDIrC,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IA+CV8D,kBAAoB,WACZ,EAAK1B,MAAM2B,UAAY,EAAK3B,MAAM4B,eAElC,EAAKC,cAActB,QAAQuB,kBAC3B,gEAEA,EAAKD,cAActB,QAAQuB,kBAAkB,KAtDlC,EA2DnBC,aAAe,SAACC,GACZ,IAgBO,EAhBDC,EAAuC,MAAxB,EAAKC,iBAAiC,EAAKC,cAAcH,EAAMI,OAAOC,KAAKL,EAAMI,OAAOE,OAC7G,GAA0B,eAAtBN,EAAMI,OAAOC,KACb,GAAiC,GAA7BL,EAAMI,OAAOE,MAAMC,OACnB,EAAK1D,SAAS,CAACsC,cAAe,oFACfc,YAAaA,GACb,EAAKP,uBACjB,CACH,IAAMc,EAAI,eACJC,EAAS,IAAIC,WACnBD,EAAOE,cAAc,EAAKC,cAAcrC,QAAQsC,MAAM,IACtDJ,EAAOK,iBAAiB,QAAO,WAC3BN,EAAK3D,SAAS,CAACsC,cAAgBhD,KAAK4E,OACrBd,YAAaA,GAAa9D,KAAKuD,2BAKtD,EAAK7C,UAAL,mBAAgBmD,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,OAAjD,4BAC4BL,GAD5B,GACyC,EAAKP,oBA9EnC,EAsFnBS,cAAgB,SAACa,EAAYC,GACzB,OAAI,EAAKf,gBAAgBc,IAAgBC,IACtB,eAAfD,GACC,EAAKhD,MAAMqB,aAAe,EAAKa,gBAAgBb,cAEjC,iBAAf2B,GACC,EAAKhD,MAAMmB,eAAiB,EAAKe,gBAAgBf,gBAEnC,YAAf6B,GACA,EAAKhD,MAAM2B,WAAa,EAAKO,gBAAgBP,WAE9B,kBAAfqB,GACA,EAAKhD,MAAM4B,iBAAmB,EAAKM,gBAAgBN,iBAEpC,oBAAfoB,GACA,EAAKhD,MAAMkD,mBAAqB,EAAKhB,gBAAgBgB,kBAEtC,kBAAfF,GACA,EAAKhD,MAAMmD,iBAAmB,EAAKjB,gBAAgBiB,qBAxGxC,EAgHnBC,sBAAwB,SAACpB,GACnBA,EAAMI,OAAOE,MAAMC,OAAS,GAAgC,KAA3B,EAAKvC,MAAMqB,aAC9C,EAAKxC,SAAS,CAACwC,YAAaW,EAAMI,OAAOE,SAlH1B,EA4HnBe,aA5HmB,uCA4HJ,WAAMrB,GAAN,uBAAAsB,EAAA,yDACXtB,EAAMuB,iBAEFC,EAAW,CACXnC,YAAa,EAAKrB,MAAMqB,YACxBM,SAAU,EAAK3B,MAAM2B,SACrBR,cAAe,EAAKnB,MAAMmB,cAC1B+B,iBAAkB,EAAKlD,MAAMkD,iBAC7BC,eAAgB,EAAKnD,MAAMmD,gBAEzBM,EAAM,UAAY,EAAKzD,MAAM0D,aAE/B,EAAK9F,MAAM+F,OAZJ,iCAaKC,MAAMH,EAAK,CACnBI,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUT,KAnBlB,UAoBW,MAPlBU,EAbO,QAoBCC,OApBD,iBAqBH,EAAKvG,MAAMwG,KAAK,qDAAoD,GArBjE,yCAwBmBF,EAAIG,OAxBvB,QAwBGC,EAxBH,OAyBH,EAAK1G,MAAMwG,KAAKE,GAAQ,GAzBrB,iDA4BKV,MAAMH,EAAK,CACnBI,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,OAAQ,MACRC,KAAMC,KAAKC,UAAUT,KAlClB,WAmCW,MAPlBU,EA5BO,QAmCCC,OAnCD,iBAoCH,EAAKvG,MAAMwG,KAAK,yBAAwB,GApCrC,yCAuCmBF,EAAIG,OAvCvB,QAuCGC,EAvCH,OAwCH,EAAK1G,MAAMwG,KAAKE,GAAQ,GAxCrB,4CA5HI,wDA6KnBC,cA7KmB,sBA6KH,gCAAAjB,EAAA,6DACPG,EAAM,UAAY,EAAKzD,MAAM0D,YADtB,SAEKE,MAAMH,EACX,CAACK,OAAQ,WAHT,UAIM,MAFbI,EAFO,QAIJC,OAJI,gBAKR,EAAKvG,MAAMwG,KAAK,YAAc,EAAKpE,MAAM0D,YAAc,uBAAsB,GALrE,wCAQcQ,EAAIG,OARlB,QAQFC,EARE,OASR,EAAK1G,MAAMwG,KAAKE,GAAQ,GAThB,QAWZ,EAAKzF,SAAS,CAAC2F,eAAe,IAXlB,4CA7KG,EA8LnBC,qBAAuB,SAACC,GACpBA,EAAEnB,iBACF,EAAK1E,SAAS,CAAC2F,eAAe,KA9L9B,EAAKtC,gBAAkB,KAEvB,EAAKyC,WAAanG,IAAMkC,YACxB,EAAKmB,cAAgBrD,IAAMkC,YAC3B,EAAKkC,cAAgBpE,IAAMkC,YAC3B,EAAKV,MAAQ,CAAC0D,YAAa,GACbrC,YAAa,GACbF,cAAe,oFACfQ,SAAU,GACVC,eAAgB,GAChBsB,iBAAkB,GAClBC,eAAgB,GAChBlB,aAAa,EACbuC,eAAe,GAfd,E,yLAqBVrG,KAAKP,MAAM+F,O,wBAENF,EAAM,UAAYtF,KAAKP,MAAMgH,O,SACjBhB,MAAMH,G,cAAlBS,E,gBACaA,EAAIW,O,OAAjBA,E,OACArB,EAAWQ,KAAKc,MAAMD,GAC5B1G,KAAK+D,gBAAkBsB,EACvBrF,KAAK+D,gBAAgBN,eAAiB4B,EAAS7B,SAC/CxD,KAAKU,SAAS,CAAC6E,YAAavF,KAAKP,MAAMgH,OACxBvD,YAAamC,EAASnC,YACtBF,cAAeqC,EAASrC,cACxBQ,SAAU6B,EAAS7B,SACnBC,eAAgB4B,EAAS7B,SACzBuB,iBAAkBM,EAASN,iBAC3BC,eAAgBK,EAASL,iB,4GArCd3E,IAAMC,YEoF7BsG,E,kDApFX,aAAe,IAAD,8BACV,gBASJ1B,aAAc,SAACrB,GACXA,EAAMuB,iBACF,EAAKyB,iBAAiBzE,QAAQ+B,QAAU,EAAK2C,uBAAuB1E,QAAQ+B,MAC5E,EAAK1E,MAAMsH,cAAc,EAAKF,iBAAiBzE,QAAQ+B,QAEvD,EAAK2C,uBAAuB1E,QAAQ4E,QACpC,EAAKtG,SAAS,CAACuG,SAAU,gEAhBnB,EAoBdC,eAAiB,SAACX,GACC,UAAXA,EAAEY,OACFZ,EAAEnB,iBACF,EAAKF,iBArBT,EAAK2B,iBAAmBxG,IAAMkC,YAC9B,EAAKuE,uBAAyBzG,IAAMkC,YACpC,EAAKV,MAAQ,CAACoF,SAAU,IAJd,E,qDA4BV,OACI,yBAAKrH,UAAU,aACX,gCACI,yBAAK6C,IAAI,kCAAkC3C,MAAO,CAACsH,SAAS,WAAWC,MAAM,YAEjF,yBAAKzH,UAAU,SACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAc,8CAE5B,4BAAQA,UAAU,cACdQ,QAASJ,KAAKP,MAAM6H,qBADxB,SAKJ,yBAAK1H,UAAU,cACa,IAAvBI,KAAK6B,MAAMoF,SAAiB,uBAAGrH,UAAU,YAAYI,KAAK6B,MAAMoF,UAAgB,KACjF,0BAAMM,SAAUvH,KAAKkF,cACrB,+CAEI,2BACAhF,KAAK,WACLsH,YAAY,qBACZC,QAAQ,uEACR7H,UAAU,yBACVkC,IAAK9B,KAAK6G,oBAGd,6BACA,sDAEI,2BACA3G,KAAK,WACL+C,GAAG,iBACHuE,YAAY,sBACZ5H,UAAU,yBACV8H,QAAS1H,KAAKkH,eACdpF,IAAK9B,KAAK8G,0BAGd,6BACA,4BAAQjH,KAAK,SACbD,UAAU,mDACN,0BAAMA,UAAU,cAFpB,+B,GAtEIS,IAAMC,WCuEvBqH,E,kDArEX,aAAe,IAAD,8BACV,gBASJC,oBAVc,uCAUQ,WAAM/D,GAAN,mBAAAsB,EAAA,6DAClBtB,EAAMuB,iBADY,SAEGK,MAAM,UAAY,EAAKoC,SAASzF,QAAQ+B,OAF3C,UAGK,MADnB2D,EAFc,QAGL9B,OAHK,iCAIK8B,EAASpB,OAJd,OAIRA,EAJQ,OAMW,WADnBqB,EAAMlC,KAAKc,MAAMD,IACfsB,aACJ,EAAKvI,MAAMwI,kBAAkBF,EAAI9E,GAAG8E,EAAIhD,iBAAkBgD,EAAI/C,gBAE9D,EAAKtE,SAAS,CAACwH,OAAQ,yCAA2CH,EAAIC,aAA/C,sBACcD,EAAIC,aAAe,4BAV9C,wBAad,EAAKtH,SAAS,CAACuG,SAAU,+CAAiD,EAAKY,SAASzF,QAAQ+B,MAAQ,OAb1F,4CAVR,sDAEV,EAAK0D,SAAWxH,IAAMkC,YACtB,EAAKV,MAAQ,CAACoF,SAAU,IAHd,E,qDA2BJ,IAAD,SACL,OACI,yBAAKrH,UAAU,QAAQC,KAAK,UAC1B,yBAAKD,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAc,+CAC5B,4BAAQA,UAAU,cACdQ,QAAS,WAAO,EAAKX,MAAM6H,wBAD/B,SAKF,yBAAK1H,UAAU,cACS,IAArBI,KAAK6B,MAAMsG,OAAe,uBAAGvI,UAAU,YAAYI,KAAK6B,MAAMoF,UAAgB,KAC/E,0BAAMM,SAAUvH,KAAK4H,qBACrB,wDAEI,8BACA9F,IAAK9B,KAAK6H,SACVjI,UAAU,yBACVM,KAAK,QACLkI,KAAK,KACLZ,YAAY,sBACZC,QAAQ,mDANR,oBAOKzH,KAAK6H,UAPV,0BAQU,GARV,KAWJ,4BAAQ3H,KAAK,SACTN,UAAU,mDACV,0BAAMA,UAAU,iBAFpB,gC,GAzDcS,IAAMC,WCqExB+H,E,kDArEZ,aAAe,IAAD,8BACV,gBAUJnD,aAAe,SAACrB,GACZA,EAAMuB,iBACF,EAAKkD,kBAAkBlG,QAAQ+B,QAAU,EAAK1E,MAAM8I,OACpD,EAAK9I,MAAM+I,kBAEX,EAAKF,kBAAkBlG,QAAQ4E,QAC/B,EAAKtG,SAAS,CAACuG,SAAU,iFAf7B,EAAKqB,kBAAoBjI,IAAMkC,YAC/B,EAAKV,MAAQ,CAACoF,SAAU,IAHd,E,gEAQVjH,KAAKsI,kBAAkBlG,QAAQ4E,U,+BAc/B,OACI,yBAAKpH,UAAU,QAAQC,KAAK,UAC1B,yBAAKD,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAc,wDAE5B,4BAAQA,UAAU,cACdQ,QAASJ,KAAKP,MAAM6H,qBADxB,SAKF,yBAAK1H,UAAU,cACW,IAAvBI,KAAK6B,MAAMoF,SAAiB,uBAAGrH,UAAU,YAAYI,KAAK6B,MAAMoF,UAAgB,KACjF,0BAAMM,SAAUvH,KAAKkF,cACrB,oDAEI,8BACAuD,UAAU,EACVtE,MAAOnE,KAAKP,MAAMiJ,SAClB9I,UAAU,yBACV+I,KAAK,IACLC,KAAK,QAGT,kDAEI,8BACAhJ,UAAU,yBACV4H,YAAY,iCACZ1F,IAAK9B,KAAKsI,kBACVK,KAAK,IACLC,KAAK,QAGT,4BAAQ/I,KAAK,SACXD,UAAU,mDACR,0BAAMA,UAAU,gBAFpB,8B,GA1DiBS,IAAMC,WCkR5BuI,G,wDA3QX,aAAe,IAAD,8BACV,gBA2BJC,kBA5Bc,uCA4BM,WAAOjF,GAAP,SAAAsB,EAAA,sDAChBtB,EAAMuB,iBACN,EAAK1E,SAAS,CACVqI,aAAc,wBACdC,cAAe,KAGnB,EAAKvJ,MAAME,WAAW1B,EAAQgB,MAPd,2CA5BN,wDAsDdgK,kBAAoB,SAACC,GACjB,EAAKxI,SAAS,CACVyI,UAAWD,EACXE,yBAAyB,KAzDnB,EA+DdC,oBAAsB,WAClB,EAAK3I,SAAS,CAAE0I,yBAAyB,KAhE/B,EAsEd9B,oBAAsB,WAClB,EAAKgC,YAAc,GACnB,EAAKC,OAAS,GACd,EAAKC,OAAS,GACd,EAAK9I,SAAS,CACV+I,yBAAyB,EACzBC,4BAA4B,EAC5BC,uBAAuB,KA7EjB,EAmFdC,iBAAmB,SAACC,GAChBC,OAAOC,KAAP,gBAAqBF,GAAY,UApFvB,EA0FdG,sBAAwB,SAACH,GAAc,IAAD,EAClC,EAAKnJ,UAAL,mBACKmJ,EAAW,OAAS,yBADzB,cAEKA,EAAW,QAAU,iBAF1B,IAIAI,YAAW,kBAAM,EAAKL,iBAAiBC,KAAW,MA/FxC,EAqGd5B,kBAAoB,SAACxB,EAAQiC,EAAUH,GACnC,EAAKe,YAAc7C,EACnB,EAAK8C,OAASb,EACd,EAAKc,OAASjB,EACd,EAAK7H,SAAS,CACV+I,yBAAyB,EACzBC,4BAA4B,KA3GtB,EAiHdlB,eAAiB,WACb,EAAK9H,SAAS,CACVgJ,4BAA4B,EAC5BC,uBAAuB,KApHjB,EA2Hd5C,cA3Hc,uCA2HE,WAAOmD,GAAP,mBAAA/E,EAAA,6DACNG,EAAM,UAAY,EAAKgE,YADjB,SAEM7D,MAAMH,EAAK,CACzBI,QAAS,CACL,OAAU,mBACV,eAAgB,oBAGpBC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEtC,SAAU0G,MATzB,UAWM,MATZnE,EAFM,QAWJC,OAXI,gBAYR,EAAKtF,SAAS,CACVyJ,wBAAwB,EACxBhB,UAAW,iCAdP,wCAkBcpD,EAAIG,OAlBlB,QAkBFC,EAlBE,OAmBR,EAAKzF,SAAS,CACViJ,uBAAuB,EACvBR,UAAWhD,IArBP,4CA3HF,wDAyJd8C,kBAAoB,SAACC,EAAKkB,GACtB,EAAK1J,SAAS,CACVyI,UAAWD,EACXE,yBAAyB,KA5JnB,EAmKdiB,eAAiB,WACb,EAAK3J,SAAS,CAAEyI,UAAW,MApKjB,EAuKdmB,MAAQ,WACJ,EAAK7K,MAAME,WAAW1B,EAAQK,QAxKpB,EA6Kd+K,oBAAsB,WAClB,EAAK3I,SAAS,CAAE0I,yBAAyB,KA9K/B,EAiLdmB,OAAS,WACL,EAAK9K,MAAME,WAAW1B,EAAQe,WA/K9B,EAAKwL,cAAgBnK,IAAMkC,YAC3B,EAAK+G,YAAc,GACnB,EAAKC,OAAS,GACd,EAAKC,OAAS,GACd,EAAKiB,iBAAmBpK,IAAMkC,YAC9B,EAAKV,MAAQ,CACTsH,UAAW,GACXJ,aAAc,gBACdC,cAAe,SACfS,yBAAyB,EACzBC,4BAA4B,EAC5BC,uBAAuB,EACvBe,WAAY,eACZC,YAAa,sBACbC,SAAU,GACVC,mBAAmB,GAlBb,E,gEAwBV7K,KAAKwK,cAAcpI,QAAQ4E,U,+BA8J3B,OACI,yBAAKpH,UAAU,aACX,gCACI,yBAAKA,UAAU,WAEP,yBAAK6C,IAAI,kCAAkC3C,MAAO,CAAEsH,SAAU,WAAYC,MAAO,WACxD,IAAxBrH,KAAK6B,MAAMsH,UAAkB,yBAAKvJ,UAAU,cAAa,8BAAOI,KAAK6B,MAAMsH,WACxE,4BAAQvJ,UAAU,cAAcQ,QAASJ,KAAKqK,gBAC1C,0BAAMzK,UAAU,kBACF,KACrBI,KAAK6B,MAAM4H,wBACR,kBAAC,EAAD,CAAqBnC,oBAAqBtH,KAAKsH,oBAC3CW,kBAAmBjI,KAAKiI,oBAAwB,KACvDjI,KAAK6B,MAAM6H,2BACR,kBAAC,EAAD,CAAwBpC,oBAAqBtH,KAAKsH,oBAC9CoB,SAAU1I,KAAKuJ,OACfhB,OAAQvI,KAAKwJ,OACbhB,eAAgBxI,KAAKwI,iBAAqB,KACjDxI,KAAK6B,MAAMsI,uBACR,kBAAC,EAAD,CAAmB7C,oBAAqBtH,KAAKsH,oBACzCP,cAAe/G,KAAK+G,gBAAoB,KAChD,0BAAM9D,GAAG,iBAAiBsE,SAAUvH,KAAK8I,mBACrC,2BAAOgC,QAAQ,aAAahL,MAAO,CAAE0C,QAAS,EAAGuI,SAAU,GAAIC,WAAY,QAEvE,2BACIlL,MAAO,CAAEmL,gBAAiB,SAC1BnJ,IAAK9B,KAAKwK,cACV5K,UAAU,0BACVM,KAAK,QACLsH,YAAY,QACZvE,GAAG,aACHwE,QAAQ,kDACRyD,UAAU,KAIlB,2BAAOJ,QAAQ,gBAAgBhL,MAAO,CAAE0C,QAAS,EAAGuI,SAAU,GAAIC,WAAY,QAE1E,2BACIlJ,IAAK9B,KAAKyK,iBACV7K,UAAU,6BACVM,KAAK,WACLsH,YAAY,WACZvE,GAAG,gBACHwE,QAAQ,8BACRyD,UAAU,KAIlB,uBAAGtL,UAAU,YAAYqD,GAAG,WAAWnD,MAAO,CAAEiL,SAAU,MAE1D,4BACI7K,KAAK,SACLN,UAAU,0CACV,0BAAMqD,GAAG,iBAAiBrD,UAAWI,KAAK6B,MAAMkH,eAHpD,OAIT/I,KAAK6B,MAAMmH,eAEF,6BACA,2BACI,4BAAQ9I,KAAK,SAASN,UAAU,0BAA0BqD,GAAG,mBACzD7C,QAASJ,KAAKuK,QADlB,qBADJ,KAIhB,4BAAQrK,KAAK,SAASN,UAAU,0BAA0BqD,GAAG,WACrC7C,QAASJ,KAAKsK,OADtC,wBAIgB,2BACI,uEAGPtK,KAAK6B,MAAMuH,wBACR,kBAAC,EAAD,CACI5D,QAAQ,EACRS,KAAMjG,KAAKiJ,kBACXkC,OAAQnL,KAAKqJ,sBAA0B,KAC9CrJ,KAAK6B,MAAM8H,sBAAwB,kBAAC,EAAD,MAAwB,Y,GAnQhEtJ,IAAMC,YCLT8K,G,mLAGb,OACI,wBAAIC,IAAKrL,KAAKP,MAAM4L,KAChB,yBAAKvL,MAAO,CAAEC,MAAO,MAAOuL,UAAW,+BAA+BnJ,aAAa,MAAOoJ,OAAQ,UAC9F,yBAAKzL,MAAO,CAAEmL,gBAAiB,UAAU9I,aAAa,QAAS,yBAAKrC,MAAO,CAAE0C,QAAS,QAAS,yBAAK1C,MAAS,CAAC0L,WAAW,UAAWxL,KAAKP,MAAMgM,aAC/I,yBAAK3L,MAAO,CAAE0C,QAAS,MAAOgJ,WAAY,UAAYxL,KAAKP,MAAMiM,e,GAP1CrL,IAAMC,YCC5BqL,E,kDACjB,WAAYlM,GAAQ,IAAD,8BACf,cAAMA,IAWVmM,UAAY,SAACrF,GACT,EAAK7F,UAAS,SAAAY,GAAS,MAAK,CAAEsK,WAAYtK,EAAUsK,eAbrC,EAenBC,SAAW,SAACtF,GACR,IAAIuF,EAAU,CACVL,UAAW,UACXC,QAAS,EAAKK,cAAc5H,MAC5BkH,IAAKW,KAAKC,OAGd,EAAKvL,UAAS,SAAAY,GAAS,MAAK,CAAE4K,QAAS,CAACJ,GAASK,OAAO7K,EAAU4K,aAClE,EAAKH,cAAc5H,MAAQ,GAC3B,EAAKzD,SAAS,CACV0L,YAAY,IAEhB,EAAKR,YACLrF,EAAEnB,kBA5Ba,EA8BnBiH,aAAe,SAACC,GACZ,OAAO,kBAAC,EAAD,CAAeZ,QAASY,EAAMZ,QAASD,UAAWa,EAAMb,UAAWJ,IAAKiB,EAAMjB,OA/BtE,EAiCnBe,WAAa,SAAC7F,GACV,EAAK7F,UAAS,SAAAY,GAAS,MAAK,CAAE8K,YAAa9K,EAAU8K,gBA/BrD,EAAKvK,MAAQ,CACT+J,WAAW,EACXM,QAAS,CAAC,CAAET,UAAW,UAAWC,QAAS,gBAAiBL,IAAKW,KAAKC,QACtEG,YAAY,GAND,E,qDAoCT,IAAD,OAEDG,EADcvM,KAAK6B,MAAMqK,QACAM,IAAIxM,KAAKqM,cACtC,OACI,wBAAIhB,IAAKrL,KAAKP,MAAM4L,KAEhB,yBAAKvL,MAAO,CAAEC,MAAO,MAAOuL,UAAW,+BAAgCC,OAAQ,QAASpJ,aAAc,QAClG,yBAAKrC,MAAO,CAAEqC,aAAc,MAAO8I,gBAAiB,YAChD,yBAAKnL,MAAO,CAAE0C,QAAS,QAAS,yBAAK1C,MAAO,CAAE0L,WAAY,UAAYxL,KAAKP,MAAMgM,aACrF,yBAAK3L,MAAO,CAAE0C,QAAS,MAAOgJ,WAAY,UAAYxL,KAAKP,MAAMiM,SAEjE,0BAAMnE,SAAUvH,KAAK6L,UAEb7L,KAAK6B,MAAM+J,UACP,6BACI,8BAAUV,UAAU,EAAMpJ,IAAK,SAACqD,GAAD,OAAO,EAAK4G,cAAgB5G,GAAGvF,UAAU,YAAY4H,YAAY,sBAAsB1H,MAAO,CAAE2M,aAAc,UAIjJ,KAGJzM,KAAK6B,MAAMuK,WACP,wBAAItM,MAAO,CAAE4M,cAAe,OAAQlK,QAAS,QACxC+J,GAGL,KAER,yBAAKzM,MAAO,CAAEkC,QAAS,OAAQC,cAAe,QAC1C,4BAAQ/B,KAAK,SAASN,UAAU,iBAAiBQ,QAASJ,KAAK4L,WAAY5L,KAAK6B,MAAM+J,UAAY,SAAW,SAC7G,4BAAQ1L,KAAK,SAASN,UAAU,iBAAiBQ,QAASJ,KAAKoM,WAAYtM,MAAO,CAAEC,MAAO,SAAWC,KAAK6B,MAAMuK,WAAa,eAAiB,gBAAiBpM,KAAK6B,MAAMuK,WAAa,GAAK,IAAMpM,KAAK6B,MAAMqK,QAAQ9H,OAAS,KAE3NpE,KAAK6B,MAAM+J,UACP,4BAAQhM,UAAU,iBAAiBE,MAAO,CAAEC,MAAO,SAAnD,UAEA,a,GAzEMM,IAAMC,WCmGjCqM,E,kDAlGX,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IAWVmN,QAAU,SAACrG,GACP,IAAIuF,EAAU,CACVL,UAAW,UACXC,QAAS,EAAKK,cAAc5H,MAC5BkH,IAAKW,KAAKC,OAEgB,GAA1B,EAAKpK,MAAMgL,cACXf,EAAQL,UAAY,aAExB,EAAK/K,UAAS,SAAAY,GAAS,MAAK,CAAEwL,MAAO,CAAChB,GAASK,OAAO7K,EAAUwL,WAChE,EAAKf,cAAc5H,MAAQ,GAC3BoC,EAAEnB,kBAvBa,EAyBnB2H,eAAiB,SAACxG,GACd,EAAK7F,UAAS,SAAAY,GAAS,MAAK,CAAE0L,cAAe1L,EAAU0L,kBA1BxC,EA6BnBC,eAAiB,SAACC,GACd,EAAKxM,SAAS,CACVyM,YAAaD,IAEjB,EAAKH,kBAjCU,EAmCnBK,aAAe,SAAC7G,GACZ,EAAK7F,UAAS,SAAAY,GAAS,MAAK,CAAEuL,aAAcvL,EAAUuL,iBApCvC,EAsCnBR,aAAe,SAACC,GACZ,OAAO,kBAAC,EAAD,CAAcZ,QAASY,EAAMZ,QAASD,UAAWa,EAAMb,UAAWJ,IAAKiB,EAAMjB,OApCpF,EAAKxJ,MAAQ,CACTiL,MAAO,CAAC,CAAEO,OAAO,UAAU5B,UAAW,UAAWC,QAAS,eAAgBL,IAAKW,KAAKC,QACpFe,cAAc,EACdG,YAAa,WACbN,aAAa,GAPF,E,qDAyCT,IAAD,OAEDS,EADYtN,KAAK6B,MAAMiL,MACFN,IAAIxM,KAAKqM,cAClC,OACI,yBAAKzM,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,wBAAIE,MAAO,CAAEyL,OAAQ,QAASR,SAAS,SAAvC,iBACA,4BACI,8CACA,8CACA,gDAGR,yBAAKnL,UAAU,QACX,wBAAIE,MAAO,CAAEyL,OAAQ,QAASR,SAAS,SAAvC,iBAEA,0BAAMxD,SAAUvH,KAAK4M,SACjB,8BAAU1B,UAAU,EAAMpJ,IAAK,SAACqD,GAAD,OAAO,EAAK4G,cAAgB5G,GAAGvF,UAAU,YAAY4H,YAAY,2BAChG,yBAAK1H,MAAO,CAAEkC,QAAS,OAAQC,cAAe,MAAOU,OAAQ,WACzD,4BAAQzC,KAAK,SAASN,UAAU,kBAAkBE,MAAO,CAAEyN,MAAO,OAAQ/B,WAAY,UAAtF,QACA,4BAAQtL,KAAK,SAASE,QAAS,kBAAM,EAAK2M,kBAAkBnN,UAAU,kBAAkBE,MAAO,CAAEyN,MAAO,OAAQ/B,WAAY,QAASzL,MAAO,UAAYC,KAAK6B,MAAMsL,aACnK,2BAAOjN,KAAK,WAAWJ,MAAO,CAAE0N,UAAW,QAAShC,WAAY,QAAUpL,QAASJ,KAAKoN,eACxF,uBAAGtN,MAAO,CAAE0N,UAAW,QAAShC,WAAY,UAA5C,sBAGPxL,KAAK6B,MAAMmL,aACR,yBAAKlN,MAAO,CAAEkC,QAAS,OAAQC,cAAe,UAAYrC,UAAU,cAChE,4BAAQA,UAAU,kBAAkBE,MAAO,CAAEC,MAAO,QAASoC,aAAc,OAAS/B,QAAS,kBAAM,EAAK6M,eAAe,cAAvH,YACA,4BAAQrN,UAAU,kBAAkBE,MAAO,CAAEC,MAAO,QAASoC,aAAc,OAAS/B,QAAS,kBAAM,EAAK6M,eAAe,sBAAvH,qBAIJ,KAIJ,wBAAInN,MAAO,CAAE4M,cAAe,OAAQlK,QAAS,MAAOgL,UAAU,SACzDF,IAIT,yBAAK1N,UAAU,SACX,wBAAIE,MAAO,CAAEyL,OAAQ,QAASR,SAAS,SAAvC,SACA,4BACI,sCACA,sCACA,8C,GAzFL1K,IAAMC,W,OC2BdmN,E,uKAzBP,OACA,yBAAKxK,GAAG,aAAarD,UAAU,QAAQC,KAAK,UAC5C,yBAAKD,UAAU,iBACX,yBAAKA,UAAU,gBACb,gCACE,wBAAIA,UAAU,eAAc,uDAE7B,4BAAQqD,GAAG,aAAarD,UAAU,cAAcQ,QAASJ,KAAKP,MAAMiO,OAApE,SAGH,yBAAK9N,UAAU,cACb,wEAEF,yBAAKA,UAAU,gBACT,4BAAQA,UAAU,iBAAiBQ,QAASJ,KAAKP,MAAMkO,aAAvD,eAEA,4BAAQ/N,UAAU,oBAAoBQ,QAASJ,KAAKP,MAAMiO,OAA1D,qB,GAnBerN,IAAMC,WCwGxBsN,E,kDApGb,aAAe,IAAD,8BACZ,gBASFC,UAAY,SAAC5K,GACX,EAAKxD,MAAMqO,UAAU7K,GACrB,EAAKxD,MAAME,WAAW1B,EAAQmB,mBAZlB,EAkBduO,YAAc,WACZ,EAAKlO,MAAMkO,cACX,EAAKjN,SAAS,CAACqN,mBAAmB,KApBtB,EA6Bd1H,cAAgB,SAACpD,GACf,EAAKxD,MAAMuO,YAAY/K,GACvB,EAAKvC,SAAS,CAACqN,mBAAmB,KA/BtB,EAqCdE,YAAc,WAEd,IADA,IAAIC,EAAQ,GADQ,WAEXC,GACPD,EAAME,KACJ,wBAAI/C,IAAK8C,GACP,4BAAK,EAAK1O,MAAM4O,OAAOF,GAAGG,KAAKC,UAAU,EAAE,KAC3C,4BAAK,EAAK9O,MAAM4O,OAAOF,GAAGK,QAC1B,4BAAMC,OAAO,EAAKhP,MAAM4O,OAAOF,GAAGO,SAC5BD,OAAO,EAAKhP,MAAM4O,OAAOF,GAAGQ,SAC5B,KAAO,EAAKlP,MAAM4O,OAAOF,GAAGS,QAAU,GACpC,IAAM,EAAKnP,MAAM4O,OAAOF,GAAGS,QAC3B,EAAKnP,MAAM4O,OAAOF,GAAGS,SAAW,KAClC,EAAKnP,MAAM4O,OAAOF,GAAGO,QACrB,OAAS,EAAKjP,MAAM4O,OAAOF,GAAGQ,QAAU,KACvC,EAAKlP,MAAM4O,OAAOF,GAAGS,QAAU,GAC9B,IAAM,EAAKnP,MAAM4O,OAAOF,GAAGS,QAC3B,EAAKnP,MAAM4O,OAAOF,GAAGS,SAAW,KAExC,4BAAI,4BAAQxO,QAAS,EAAKX,MAAMqD,SAAW,KAAO,kBAChD,EAAK+K,UAAUM,KACX,0BAAMvO,UAAU,gBACtB,4BAAI,4BAAQQ,QAAS,EAAKX,MAAMqD,SAAW,KACzC,kBAAM,EAAKuD,cAAc8H,KACrB,0BAAMvO,UAAU,qBArBnBuO,EAAI,EAAGA,EAAI,EAAK1O,MAAM4O,OAAOjK,SAAU+J,EAAI,EAA3CA,GAyBT,OAAOD,GA9DL,EAAKrM,MAAQ,CAACkM,mBAAmB,GAFrB,E,qDAqEJ,IAAD,OACP,OACA,yBAAKnO,UAAU,eACb,6BACA,2BAAOA,UAAU,qBACf,2BAAOA,UAAU,eACjB,4BACE,oCACA,sCACA,qCACA,4CACA,wCAGF,+BAC6C,IAA1CN,OAAOuP,KAAK7O,KAAKP,MAAM4O,QAAQjK,OAChC,4BACA,wBAAI0K,QAAQ,IAAIhP,MAAO,CAACiP,UAAW,WAAnC,qBACQ/O,KAAKiO,gBAIhBjO,KAAK6B,MAAMkM,kBACV,kBAAC,EAAD,CACEL,MAAO,kBAAM,EAAKhN,SAAS,CAACqN,mBAAmB,KAC/CJ,YAAa3N,KAAK2N,cAAkB,U,GAhGpBtN,IAAMC,WCqJjB0O,E,kDArJb,WAAYvP,GAAQ,IAAD,uBACnB,cAAMA,IA6BJmE,aAAe,SAACC,GACZ,IAAMK,EAAOL,EAAMI,OAAOC,KAC1B,GAAa,YAATA,EAAoB,CACtB,IAAI+K,EAAUpL,EAAMI,OAAOE,MAAMC,OAAS,EAAI,IAC5CP,EAAMI,OAAOE,MAAQN,EAAMI,OAAOE,MAChC+K,EAAS,EAAKC,WAAW,EAAKtN,MAAM6M,QAAS,EAAK7M,MAAM8M,QAC/BM,GAC7B,EAAKvO,SAAS,CAACkO,QAASK,EAAQG,IAAKF,SAChC,GAAa,YAAThL,EAAoB,CAC7B,IAAImL,EAAaxL,EAAMI,OAAOE,MAC1B+K,EAAS,EAAKC,WAAWE,EAAY,EAAKxN,MAAM8M,QAClD,EAAK9M,MAAM+M,SACb,EAAKlO,SAAS,CAACgO,QAASW,EAAYD,IAAKF,SACpC,GAAa,YAAThL,EAAoB,CAC3B,IAAIoL,EAASzL,EAAMI,OAAOE,MACtB+K,EAAS,EAAKC,WAAW,EAAKtN,MAAM6M,QAASY,EAC/C,EAAKzN,MAAM+M,SACb,EAAKlO,SAAS,CAACiO,QAASW,EAAQF,IAAKF,SAEvC,EAAKxO,SAAL,eAAgBwD,EAAOL,EAAMI,OAAOE,SAjDzB,EA2DjBe,aAAe,SAACrB,GAEZ,EAAKnD,SAAS,CAAC6O,OAAQ,wBACPC,SAAW,EAAK/P,MAAMuB,OAAS/C,EAAQkB,gBAC3B,YAAc,gBAE1C,IAAIsQ,EAAY,EAAK5N,aACd4N,EAAUF,cACVE,EAAUD,SAEjBvF,WAAW,EAAKxK,MAAMiQ,UAAU,IAAKD,GACrC5L,EAAMuB,kBAtEO,EA0EjB+J,WAAa,SAACT,EAASiB,EAAKC,GAC1B,OAAQnB,OAAOC,GAAWD,OAAOkB,GACnB,IAAMC,GAzExB,IAAIC,EAAQ,IAAI7D,KAAKA,KAAKC,MAAuC,KAAhC,IAAID,MAAQ8D,qBAE7C,GAAI,EAAKrQ,MAAMuB,OAAS/C,EAAQkB,gBAG9B,EAAK0C,MAAQ,CAACyM,KAAOuB,EAAME,cAAcC,OAAO,EAAE,IACpCxB,OAAQ,GACRtO,KAAM,WACN+P,MAAO,KACPvB,QAAS,GACTC,QAAS,GACTC,QAAS,KACTsB,MAAO,GACPX,OAAQ,aACRC,SAAU,uBACnB,CAGL,IAAIW,EAAS,eAAO,EAAK1Q,MAAM2Q,kBACxBD,EAAUlN,GACjBkN,EAAUZ,OAAS,aACnBY,EAAUX,SAAW,oBACrB,EAAK3N,MAAQsO,EAzBI,S,qDAgFf,OACE,0BAAMvQ,UAAU,cAAc2H,SAAUvH,KAAKkF,cAC3C,gCACE,uCAEE,2BAAOhB,KAAK,OAAOtE,UAAU,2BAC3BM,KAAK,OAAOiE,MAAOnE,KAAK6B,MAAMyM,KAAM+B,SAAUrQ,KAAK4D,gBAEvD,4BACA,yCAEE,2BAAOM,KAAK,SAAStE,UAAU,2BAA2BM,KAAK,OAC7DiE,MAAOnE,KAAK6B,MAAM2M,OAAQ6B,SAAUrQ,KAAK4D,aACzC4D,YAAY,gBAAgBY,KAAK,KAAKkI,UAAU,QAEtD,4BACA,uCACA,4BAAQpM,KAAK,OAAOC,MAAOnE,KAAK6B,MAAM3B,KACpCN,UAAU,2BAA2ByQ,SAAUrQ,KAAK4D,cACpD,4BAAQO,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,gBAGF,4BACA,0CACA,4BAAQD,KAAK,QAAQC,MAAOnE,KAAK6B,MAAMoO,MACrCrQ,UAAU,2BAA2ByQ,SAAUrQ,KAAK4D,cACpD,4BAAQO,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAGF,4BACA,4CACA,2BAAOD,KAAK,UAAUtE,UAAU,2BAA2BM,KAAK,SAC9DyP,IAAI,IAAIY,IAAI,MAAMpM,MAAOnE,KAAK6B,MAAM6M,QACpC2B,SAAUrQ,KAAK4D,gBAEjB,4BACA,wCAAa,6BACb,2BAAOM,KAAK,UAAUhE,KAAK,SAASkI,KAAK,IACvCuH,IAAI,KAAKY,IAAI,MAAMpM,MAAOnE,KAAK6B,MAAM8M,QACrC0B,SAAUrQ,KAAK4D,eAHjB,IAIA,2BAAOM,KAAK,UAAUhE,KAAK,SAASkI,KAAK,IACvCuH,IAAI,IAAIY,IAAI,KAAKpM,MAAOnE,KAAK6B,MAAM+M,QACnCyB,SAAUrQ,KAAK4D,gBAEjB,4BACA,mDAAwB,6BACpB,2BAAOM,KAAK,MAAMtE,UAAU,cAAcM,KAAK,OAAOkI,KAAK,IACzDoI,UAAU,EAAMrM,MAAOnE,KAAKmP,WAAWnP,KAAK6B,MAAM6M,QAAQ1O,KAAK6B,MAAM8M,QAAQ3O,KAAK6B,MAAM+M,YAE9F,4BACA,wCACI,8BAAU1K,KAAK,QAAQtE,UAAU,eAAe+I,KAAK,IAAIC,KAAK,KAC5DpB,YAAY,oBAAoBrD,MAAOnE,KAAK6B,MAAMqO,MAClDG,SAAUrQ,KAAK4D,gBAErB,4BACA,4BACA,4BAAQ1D,KAAK,SAASJ,MAAO,CAACC,MAAO,MAAMgL,SAAU,QACnDnL,UAAU,mCACR,0BAAMA,UAAWI,KAAK6B,MAAM0N,SAFhC,OAEgDvP,KAAK6B,MAAM2N,gB,GA9I7CnP,IAAMC,WCSfmQ,E,uKART,OACE,yBAAK7Q,UAAU,WAAWQ,QAASJ,KAAKP,MAAMiR,aAC5C,0BAAM9Q,UAAU,kC,GAJGS,IAAMC,WCwJpBqQ,E,kDA7IX,aAAe,IAAD,8BACV,gBAYJC,SAbc,uCAaH,WAAOC,GAAP,mBAAA1L,EAAA,6DACDG,EAAM,WAAa,EAAK7F,MAAMqR,QAAQ7N,GADrC,SAEWwC,MAAMH,EAAK,CACzBI,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU+K,KARlB,cAED9K,EAFC,gBASWA,EAAIG,OATf,OASDgD,EATC,OAUW,KAAdnD,EAAIC,QACJ,EAAKtF,SAAS,CAACuG,SAAUiC,IACzB,EAAKzJ,MAAME,WAAW1B,EAAQiB,UAE9B,EAAKwB,SAAS,CAACuG,SAAU,KACzB,EAAKxH,MAAMsR,gBAAgB9S,EAAQiB,SAfhC,2CAbG,wDAoCd2O,UApCc,uCAoCF,WAAOgD,GAAP,mBAAA1L,EAAA,6DACFG,EAAM,WAAa,EAAK7F,MAAMqR,QAAQ7N,GAAK,IAC7C,EAAKxD,MAAMqR,QAAQzC,OAAO,EAAK2C,QAAQC,IAFnC,SAGUxL,MAAMH,EAAK,CACzBI,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,OAAQ,MACRC,KAAMC,KAAKC,UAAU+K,KATjB,cAGF9K,EAHE,gBAUUA,EAAIG,OAVd,OAUFgD,EAVE,OAWU,KAAdnD,EAAIC,QACJ,EAAKtF,SAAS,CAACuG,SAAUiC,IACzB,EAAKzJ,MAAME,WAAW1B,EAAQiB,SAE9B,EAAKO,MAAMsR,gBAAgB9S,EAAQiB,QAf/B,2CApCE,wDA0DdyO,YA1Dc,sBA0DA,gCAAAxI,EAAA,6DACJG,EAAM,WAAa,EAAK7F,MAAMqR,QAAQ7N,GAAK,IAC7C,EAAKxD,MAAMqR,QAAQzC,OAAO,EAAK6C,UAAUD,IAFnC,SAGQxL,MAAMH,EAAK,CAACK,OAAQ,WAH5B,cAGJI,EAHI,gBAIQA,EAAIG,OAJZ,OAIJgD,EAJI,OAKQ,KAAdnD,EAAIC,QACJ,EAAKtF,SAAS,CAACuG,SAAU,oEACvBiC,IACF,EAAKzJ,MAAME,WAAW1B,EAAQiB,SAE9B,EAAKO,MAAMsR,gBAAgB9S,EAAQiB,QAV7B,2CA1DA,EA0Ed8O,YAAc,SAACmD,GACX,EAAKD,SAAWC,EAChB,EAAKzQ,SAAS,CAACuG,SAAU,MA5Ef,EAiFd6G,UAAY,SAACqD,GACT,EAAKH,OAASG,EACd,EAAKzQ,SAAS,CAACuG,SAAU,MAnFf,EAsFdmK,cAAgB,WACZ,EAAK1Q,SAAS,CAACuG,SAAU,MArFzB,EAAKiK,SAAW,GAChB,EAAKF,OAAS,GACd,EAAKnP,MAAQ,CAACoF,SAAU,IAJd,E,qDA6FJ,IAAD,OACL,OAAOjH,KAAKP,MAAMuB,MACd,KAAK/C,EAAQiB,OACT,OACI,oCACwB,IAAvBc,KAAK6B,MAAMoF,SAAiB,yBAAKrH,UAAU,cAAa,8BAAOI,KAAK6B,MAAMoF,UACxE,4BAAQrH,UAAU,cAAcQ,QAASJ,KAAKoR,eAC3C,0BAAMxR,UAAU,kBACD,KACrB,kBAAC,EAAD,CACIyO,OAAQrO,KAAKP,MAAMqR,QAAQzC,OAC3BP,UAAW9N,KAAK8N,UAChBE,YAAahO,KAAKgO,YAClBL,YAAa3N,KAAK2N,YAClBhO,WAAYK,KAAKP,MAAME,WACvBmD,SAAU9C,KAAKP,MAAMqD,WACzB,kBAAC,EAAD,CACI4N,YAAa,kBACb,EAAKjR,MAAME,WAAW1B,EAAQkB,kBAC9B2D,SAAU9C,KAAKP,MAAMqD,SACrBuO,KAAM,gBAGlB,KAAKpT,EAAQkB,gBACT,OACI,kBAAC,EAAD,CACI6B,KAAMhB,KAAKP,MAAMuB,KACjBoP,UAAW,GACXV,UAAW1P,KAAK4Q,WAE5B,KAAK3S,EAAQmB,iBACT,IAAI+Q,EAAS,eAAOnQ,KAAKP,MAAMqR,QAAQzC,OAAOrO,KAAKgR,SAMnD,OALAb,EAAU7B,KAAO6B,EAAU7B,KAAK0B,OAAO,EAAE,IACrCG,EAAUvB,QAAU,KACpBuB,EAAUvB,QAAU,IAAMuB,EAAUvB,gBAEjCuB,EAAUf,IAEb,kBAAC,EAAD,CACIpO,KAAMhB,KAAKP,MAAMuB,KACjBoP,UAAWD,EACXT,UAAW1P,KAAK6N,iB,GAzInBxN,IAAMC,WCSZgR,E,uKAdP,OACA,yBAAK1R,UAAU,eACX,gCACA,uCACA,gEACA,yBAAK6C,IAAI,gFACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVc1O,IAAMC,WCyDjBiR,E,uKAtDX,OACI,yBAAK3R,UAAU,QAAQC,KAAK,UAC5B,yBAAKD,UAAU,yBACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACX,gDACA,4BAAQA,UAAU,cAAcQ,QAASJ,KAAKP,MAAMiO,OAApD,SAIJ,yBAAK9N,UAAU,cACX,yBACA6C,IAAI,gFACJE,OAAO,MAAM5C,MAAM,QACnB,sFAEA,mEAAwC,6BAAxC,iEAIA,yBAAKD,MAAO,CAAC0R,UAAW,SACxB,sDACA,4BACA,wDAA6B,kDAA7B,KACA,uFACC,mDADD,KAEA,kIACwC,kDADxC,MAIA,qKAEmB,qDAFnB,gEAIA,wEAA6C,uBAC7CrR,KAAK,yBAAyB8D,OAAO,UADQ,yBAA7C,8CAEmD,uBACnD9D,KAAK,2BACL8D,OAAO,UAF4C,qBAFnD,QAI0C,uBAC1C9D,KAAK,0BAA0B8D,OAAO,UADI,iBAJ1C,OASJ,yBAAKrE,UAAU,gBACX,4BAAQA,UAAU,kCAClBQ,QAASJ,KAAKP,MAAMiO,OADpB,c,GA/COrN,IAAMC,WC8PdmR,E,kDA5PX,WAAYhS,GAAO,IAAD,8BACd,cAAMA,IA4BViS,cAAgB,WACZ,EAAKjS,MAAME,WAAW1B,EAAQC,QA9BhB,EAmClByT,eAAiB,SAAC9N,GACdA,EAAMuB,iBACF,EAAKvD,MAAM+P,OAAS,EAAK/P,MAAMgQ,eAC/B,EAAKhQ,MAAM2B,UAAY,EAAK3B,MAAMiQ,kBAClC,EAAKjQ,MAAMkQ,YAAc,EAAKlQ,MAAMmQ,oBACpC,EAAKnQ,MAAMoQ,WAAa,EAAKpQ,MAAMqQ,mBACnC,EAAKrQ,MAAMoB,IAAM,EAAKpB,MAAMsQ,YAC5B,EAAKT,iBA1CK,EA+ClBU,eAAiB,SAACvO,GACU,SAArBA,EAAMI,OAAOC,KACZ,EAAKxD,SAAS,CAACkR,MAAO/N,EAAMI,OAAOE,QAGV,iBAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACmR,cAAehO,EAAMI,OAAOE,QAElB,YAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAAC8C,SAAUK,EAAMI,OAAOE,QAEb,oBAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACoR,iBAAkBjO,EAAMI,OAAOE,QAErB,cAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACqR,WAAYlO,EAAMI,OAAOE,QAEf,aAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACuR,UAAWpO,EAAMI,OAAOE,QAEd,qBAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACwR,kBAAmBrO,EAAMI,OAAOE,QAEtB,sBAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACsR,mBAAoBnO,EAAMI,OAAOE,QAEvB,UAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAAC2R,OAAQxO,EAAMI,OAAOE,QAEX,MAArBN,EAAMI,OAAOC,KACjB,EAAKxD,SAAS,CAACuC,GAAIY,EAAMI,OAAOE,QAEP,cAArBN,EAAMI,OAAOC,MACjB,EAAKxD,SAAS,CAACyR,WAAYtO,EAAMI,OAAOE,SA9E5C,EAAK0D,SAAWxH,IAAMkC,YACtB,EAAK+P,iBAAmBjS,IAAMkC,YAC9B,EAAKgQ,YAAclS,IAAMkC,YACzB,EAAKiQ,oBAAsBnS,IAAMkC,YACjC,EAAKkQ,SAAWpS,IAAMkC,YACtB,EAAKmQ,iBAAmBrS,IAAMkC,YAC9B,EAAKoQ,SAAWtS,IAAMkC,YACtB,EAAKqQ,iBAAmBvS,IAAMkC,YAC9B,EAAKsQ,MAAQxS,IAAMkC,YACnB,EAAKuQ,aAAezS,IAAMkC,YAE1B,EAAKV,MAAQ,CACT+P,MAAO,GACPC,cAAe,GACfrO,SAAU,GACVsO,iBAAkB,GAClBC,WAAY,GACZE,UAAW,GACXC,kBAAmB,GACnBF,mBAAmB,GACnBK,OAAQ,GACRpP,GAAI,EACJkP,WAAY,EACZY,WAAW,GAzBD,E,qDAsFd,OACA,yBAAKnT,UAAU,aACX,gCACA,yBAAK6C,IAAI,kCAAkC3C,MAAO,CAACsH,SAAS,WAAWC,MAAM,WAC7E,uBAAGzH,UAAY,YAAYE,MAAO,CAACkT,MAAO,QAAShI,WAAY,SAA/D,6BAC4B,0BAAMpL,UAAU,2BAC5C,uBAAGA,UAAW,YAAYE,MAAO,CAACkT,MAAO,QAAShI,WAAY,SAA9D,qBAEA,yBAAKpL,UAAU,cACf,0BAAM2H,SAAUvH,KAAK2R,gBACrB,2BAAO/R,UAAU,cAAjB,gBAEK,2BAAOE,MAAO,CAACC,MAAM,SACrBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,QACLhE,KAAK,QACLkI,KAAK,KACLX,QAAQ,kDACRyD,UAAU,EACVpJ,IAAK9B,KAAK6H,SACXwI,SAAUrQ,KAAKoS,kBAEnB,6BACA,2BAAOxS,UAAU,cAAjB,wBAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,gBACLhE,KAAK,QACLkI,KAAK,KACLX,QAAQ,kDACRyD,UAAU,EACVpJ,IAAK9B,KAAKsS,iBACVjC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAOxS,UAAU,cAAjB,WAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,WACLhE,KAAK,WACL+C,GAAG,cACHmF,KAAK,KACLX,QAAQ,uEACRyD,UAAU,EACVpJ,IAAK9B,KAAKuS,YACVlC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAQxS,UAAU,cAAlB,mBAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,mBACLhE,KAAK,WACLkI,KAAK,KACLX,QAAQ,uEACRyD,UAAU,EACVpJ,IAAK9B,KAAKwS,oBACVnC,SAAUrQ,KAAKoS,kBAEpB,uBAAGxS,UAAY,YAAYE,MAAO,CAACkT,MAAO,QAAShI,WAAY,SAA/D,kBACA,2BAAQpL,UAAU,cAAlB,aAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,aACLhE,KAAK,OACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAKyS,SACVpC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAQxS,UAAU,cAAlB,YAEK,2BAAOE,MAAO,CAACC,MAAM,SACrBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,YACLhE,KAAK,OACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAK2S,SACVtC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAQxS,UAAU,cAAlB,oBAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,oBACLjB,GAAG,oBACH/C,KAAK,OACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAK4S,iBACVvC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAQxS,UAAU,cAAlB,qBAEK,2BAAQE,MAAO,CAACC,MAAM,SACtBkT,aAAa,MACbrT,UAAU,qCACVsE,KAAK,qBACLhE,KAAK,OACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAK0S,iBACVrC,SAAUrQ,KAAKoS,kBAEpB,uBAAGxS,UAAY,wBAAf,sBACA,uBAAGE,MAAO,CAACkT,MAAO,UAAlB,+DACA,2BAAQpT,UAAU,cAClB,4BAAQsE,KAAK,SAASpE,MAAO,CAACC,MAAM,SACpCH,UAAU,2BAA2ByQ,SAAUrQ,KAAKoS,gBACpD,4BAAQjO,MAAM,+BAAd,+BACA,4BAAQA,MAAM,4BAAd,4BACA,4BAAQA,MAAM,iCAAd,iCACA,4BAAQA,MAAM,sBAAd,wBAGA,6BACA,2BAAQvE,UAAU,cAAlB,uCAEK,2BAAOE,MAAO,CAACC,MAAM,SACrBkT,aAAa,MACbrT,UAAU,yBACVsE,KAAK,KACLhE,KAAK,SACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAK6S,MACVxC,SAAUrQ,KAAKoS,kBAEpB,6BACA,2BAAQxS,UAAU,cAAlB,+CAEK,2BAAOE,MAAO,CAACC,MAAM,SACrBkT,aAAa,MACbrT,UAAU,8CACVsE,KAAK,aACLhE,KAAK,SACLkI,KAAK,KACL8C,UAAU,EACVpJ,IAAK9B,KAAK8S,aACVzC,SAAUrQ,KAAKoS,kBAEpB,6BACA,4BAAQxS,UAAU,eAAeC,KAAK,SAASK,KAAK,UAApD,oB,GApPeG,IAAMC,WCDZ4S,E,kDAEjB,WAAYzT,GAAQ,IAAD,8BACf,cAAMA,IAMV0T,QAAU,WACN,OAAO7T,OAAOuP,KAAK7O,KAAKP,MAAM2T,KAAK,KARpB,EAWnBC,UAAY,WAER,OADWrT,KAAKmT,UACJ3G,KAAI,SAACnB,EAAKiI,GAClB,OAAO,wBAAIjI,IAAKA,GAAMA,EAAIkI,mBAdf,EAmBnBC,YAAc,WACV,IAAIC,EAAQzT,KAAKP,MAAM2T,KACnBvE,EAAO7O,KAAKmT,UAChB,OAAOM,EAAMjH,KAAI,SAACkH,EAAKJ,GACnB,OAAO,wBAAIjI,IAAKiI,GAAO,kBAAC,EAAD,CAAWjI,IAAKiI,EAAOF,KAAMM,EAAK7E,KAAMA,SArBnE,EAAKwE,UAAY,EAAKA,UAAUM,KAAf,gBACjB,EAAKH,YAAc,EAAKA,YAAYG,KAAjB,gBACnB,EAAKR,QAAU,EAAKA,QAAQQ,KAAb,gBAJA,E,qDA6Bf,OACI,6BACI,2BAAO/T,UAAU,qBACb,2BAAOA,UAAU,eACb,4BAAKI,KAAKqT,cAEd,+BACKrT,KAAKwT,qB,GAtCUnT,IAAMC,WA+CxCsT,EAAY,SAACnU,GAEf,OAAOA,EAAMoP,KAAKrC,KAAI,SAACnB,EAAKiI,GACxB,OAAO,wBAAIjI,IAAK5L,EAAM2T,KAAK/H,IAAO5L,EAAM2T,KAAK/H,QCmCtCwI,E,kDAnFX,WAAYpU,GAAQ,IAAD,8BACf,cAAMA,IACDoC,MAAQ,CACTuR,KAAO,CACH,CAAC,GAAK,SAAU,QAAW,GAAI,eAAgB,IAAK,eAAgB,KACpE,CAAC,GAAM,WAAY,QAAW,OAAQ,eAAgB,IAAK,eAAgB,IAC3E,CAAC,GAAM,WAAY,QAAW,OAAQ,eAAgB,GAAI,eAAgB,KAG9EU,cAAe,GATJ,E,qDAcf,OACI,yBAAKlU,UAAU,YACX,gCACI,0CACA,4BAAQqD,GAAG,YAAY8Q,MAAM,kBAAkBC,cAAY,QAAQC,cAAY,mBAA/E,qBA0DJ,kBAAC,EAAD,CAAYb,KAAMpT,KAAK6B,MAAMuR,a,GA7EpB/S,IAAMC,WCDV4T,E,uKAGb,OACI,wBAAI7I,IAAKrL,KAAKP,MAAM4L,IAAKvL,MAAO,CAAEqU,aAAc,sBAE5C,4BAAM,yBAAKrU,MAAO,CAAE0N,UAAW,OAAOhC,WAAW,UAAYxL,KAAKP,MAAM2U,aACxE,4BAAM,yBAAKtU,MAAO,CAAE0N,UAAW,SAAWxN,KAAKP,MAAM4U,UACrD,4BAAM,yBAAKvU,MAAO,CAAE0N,UAAW,WAAaxN,KAAKP,MAAM6U,UAAY,4BAAQxU,MAAO,CAACC,MAAM,OAAOyL,WAAW,OAAQ5L,UAAU,kBAA1D,YAA8F,4BAAQE,MAAO,CAACC,MAAM,OAAOyL,WAAW,OAAQ5L,UAAU,kBAA1D,YACjK,4BAAK,yBAAKE,MAAO,CAAE0N,UAAW,SAAWxN,KAAKP,MAAM8U,sB,GAT5BlU,IAAMC,WCCzBkU,E,kDACjB,WAAY/U,GAAQ,IAAD,8BACf,cAAMA,IAYV4M,aAAe,SAACC,GACZ,OAAO,kBAAC,EAAD,CAAY8H,WAAY9H,EAAM8H,WAAYC,QAAS/H,EAAM+H,QAASC,UAAWhI,EAAMgI,UAAWC,eAAgBjI,EAAMiI,kBAX3H,EAAK1S,MAAQ,CACTX,YAAa,CACT,CAAEkT,WAAY,eAAgBC,QAAS,sBAAuBC,WAAW,EAAOC,eAAgB,IAChG,CAAEH,WAAY,eAAgBC,QAAS,sBAAuBC,WAAW,EAAMC,eAAgB,mCANxF,E,qDAiBf,IACIE,EADkBzU,KAAK6B,MAAMX,YACIsL,IAAIxM,KAAKqM,cAC9C,OACI,yBAAKzM,UAAY,YACb,wBAAIE,MAAO,CAAEyL,OAAQ,SAAUR,SAAU,SAAzC,eACA,2BAAOnL,UAAU,qBACb,2BAAOA,UAAU,eACb,4BACI,wBAAIE,MAAO,CAAEC,MAAO,QAAS2U,YAAa,WAA1C,cACA,wCACA,uCACA,iDAIR,+BACKD,S,GAlCoBpU,IAAMC,WCgBpCqU,E,uKAdP,OACA,yBAAK/U,UAAU,YACX,gCACA,yCACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVgB1O,IAAMC,WCiBnBsU,E,uKAdP,OACA,yBAAKhV,UAAU,YACX,gCACA,+CACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVqB1O,IAAMC,WCAlBuU,E,kDACjB,WAAYpV,GAAQ,IAAD,8BACf,cAAMA,IAWV0T,QAAU,WACN,OAAO7T,OAAOuP,KAAK7O,KAAKP,MAAM2T,OAbf,EAenB0B,YAAc,WACV,IAAIjG,EAAO7O,KAAKmT,UACZM,EAAQzT,KAAK6B,MAAMuR,KACvB,OAAOvE,EAAKrC,KAAI,SAAC/F,EAAQ6M,GACrB,OAAQ,kBAAC,EAAD,CAAgByB,IAAOtO,EAAQuO,SAAYvB,EAAMhN,GAAS4E,IAAOiI,QAjB7E,EAAKzR,MAAQ,CACTuR,KAAQ3T,EAAM2T,KACdlT,KAAOT,EAAMS,MAKb,EAAK4U,YAAc,EAAKA,YAAYnB,KAAjB,gBACnB,EAAKR,QAAU,EAAKA,QAAQQ,KAAb,gBAVJ,E,qDAyBf,OACI,yBAAKI,MAAM,gBACP,4BAAK/T,KAAK6B,MAAM3B,MAChB,2BAAON,UAAU,qBACb,2BAAQA,UAAU,eAAc,4BAC5B,qCACA,qCAGJ,+BAAQI,KAAK8U,qB,GAnCMzU,IAAMC,WA6CvC2U,EAAiB,SAACxV,GAChB,IAAIyV,EAAU,UAAUzV,EAAMsV,IAE9B,OAAO,wBAAI1J,IAAK5L,EAAM4L,IAAKnH,KAAQgR,GAC/B,4BAAKzV,EAAMuV,UACX,4BAAKvV,EAAMsV,KACX,4BAAI,4BAAQhB,MAAM,mBAAd,eACJ,4BAAQA,MAAM,mBAAd,WACA,4BAAQA,MAAM,mBAAd,aCFGoB,E,kDAlDX,WAAY1V,GAAQ,IAAD,8BACf,cAAMA,IAkBV2V,aAAe,WACX,IAAIC,EAAQ/V,OAAOuP,KAAK7O,KAAK6B,MAAMuR,MAC/BkC,EAAYtV,KAAK6B,MAAMuR,KAC3B,OAAOiC,EAAM7I,KAAI,SAAC3M,EAAMyT,GACpB,OAAO,kBAAC,EAAD,CAAWF,KAAMkC,EAAUzV,GAAOK,KAAML,QArBnD,EAAKgC,MAAQ,CACTuR,KACA,CACI,YAAe,CAAEmC,EAAG,SAAUC,EAAG,SACjC,IAAO,CAAEC,EAAG,MAAOC,EAAG,QACtB,SAAY,CAAEC,EAAG,OAAQC,EAAG,SAMhCC,SAAU,GAGd,EAAKT,aAAe,EAAKA,aAAazB,KAAlB,gBAhBL,E,qDA2Bf,OACI,yBAAK/T,UAAU,YACX,gCACI,uCAGA,yBAAKqD,GAAG,mBAAmBnD,MAAO,CAAEkC,QAAS,UACzC,+CAGA,6BACI,uBAAG7B,KAAK,kBAAR,oBADJ,WAER,uBAAGA,KAAK,yBAAR,gBAFQ,aAKHH,KAAKoV,qB,GA3CF/U,IAAMC,WCgBfwV,E,uKAdP,OACA,yBAAKlW,UAAU,YACX,gCACA,oCACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVW1O,IAAMC,WCwDdyV,E,uKArDP,OACI,yBAAKnW,UAAU,YACX,gCACI,qCACA,yBAAKmU,MAAM,YAAY9Q,GAAG,aACtB,uBAAG8Q,MAAM,mBAAT,WACA,uBAAGA,MAAM,mBAAT,SACA,uBAAGA,MAAM,mBAAT,WACA,2BAAO9Q,GAAG,mBAAmB/C,KAAK,SAAS6T,MAAM,kBAAkBvD,SAAS,WAAWrM,MAAM,YAEjG,yBAAK4P,MAAM,eAEP,2BAAOA,MAAM,iCACT,2BAAOnU,UAAU,eACb,4BACI,wBAAIE,MAAO,CAAC0R,UAAW,UAAWvO,GAAG,WAAW8Q,MAAM,yBAAwB,2BAAO9Q,GAAG,cAAc/C,KAAK,cAC3G,wBAAI6T,MAAM,6BACV,wBAAIA,MAAM,qBAAoB,qCAC9B,wBAAIA,MAAM,wBAAuB,wCACjC,wBAAIA,MAAM,qBAAoB,qCAC9B,wBAAIA,MAAM,wBAAuB,0CAKzC,+BAAO,wBAAI9Q,GAAG,iBAAiB8Q,MAAM,IACjC,wBAAIjU,MAAQ,CAAC0R,UAAW,WAAW,2BAAOvO,GAAG,OAAO8Q,MAAM,oBAAoB7P,KAAK,gBAAgBhE,KAAK,cACxG,wBAAI6T,MAAM,sBAEV,wBAAIA,MAAM,cACN,0BAAMA,MAAM,oBAAoBiC,SAAS,aAAaC,qBAAmB,mBAAmBC,mBAAiB,sBAA7G,wBAEJ,wBAAInC,MAAM,iBAAV,YAGA,wBAAIA,MAAM,cAAV,cAGA,wBAAIA,MAAM,iBACN,uBAAG5T,KAAK,mBAAR,4B,GA1CbE,IAAMC,WCiBd6V,E,uKAdP,OACA,yBAAKvW,UAAU,YACX,gCACA,uCACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVc1O,IAAMC,WCiBjB8V,E,uKAdP,OACA,yBAAKxW,UAAU,YACX,gCACA,6CACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVmB1O,IAAMC,WCChB+V,E,uKAGb,OACI,wBAAIhL,IAAKrL,KAAKP,MAAM4L,IAAKvL,MAAO,CAAEqU,aAAc,sBAC5C,4BAAI,4BAAQvU,UAAU,kBAAlB,MACJ,4BAAM,yBAAKE,MAAO,CAAE0N,UAAW,UAAYxN,KAAKP,MAAM6W,aACtD,4BAAM,yBAAKxW,MAAO,CAAE0N,UAAW,UAAYxN,KAAKP,MAAM8W,eACtD,4BAAM,yBAAKzW,MAAO,CAAE0N,UAAW,UAAYxN,KAAKP,MAAM+W,WACtD,4BAAK,yBAAK1W,MAAO,CAAE0N,UAAW,UAAYxN,KAAKP,MAAMgX,kB,GATjCpW,IAAMC,WC8C3BoW,E,kDA7CX,WAAYjX,GAAQ,IAAD,8BACf,cAAMA,IAYV4M,aAAe,SAACC,GACZ,OAAO,kBAAC,EAAD,CAAQgK,WAAYhK,EAAMgK,WAAYC,aAAcjK,EAAMiK,aAAcC,SAAUlK,EAAMkK,SAAUC,WAAYnK,EAAMmK,cAX3H,EAAK5U,MAAQ,CACT8U,QAAS,CACL,CAAEL,WAAY,qCAAsCC,aAAc,WAAYC,SAAU,YAAaC,WAAY,uBACjH,CAAEH,WAAY,kBAAmBC,aAAc,WAAYC,SAAU,YAAaC,WAAY,oBAC9F,CAAEH,WAAY,8BAA+BC,aAAc,WAAYC,SAAU,YAAaC,WAAY,uBAPnG,E,qDAiBf,IACIG,EADc5W,KAAK6B,MAAM8U,QACAnK,IAAIxM,KAAKqM,cACtC,OACI,yBAAKzM,UAAU,YACX,wBAAIE,MAAO,CAAEyL,OAAQ,SAAUR,SAAU,SAAzC,sBACA,2BAAOnL,UAAU,qBACb,2BAAOA,UAAU,eACb,4BACI,wBAAIE,MAAO,CAACC,MAAM,OAAO2U,YAAY,WAArC,QACA,2CACA,6CACA,wCACA,4CAIR,+BACKkC,S,GAnCIvW,IAAMC,WCgBpBuW,G,uKAdP,OACA,yBAAKjX,UAAU,YACX,gCACA,4CACA,gEACA,yBAAK6C,IAAI,aACRE,OAAO,MAAM5C,MAAM,QACpB,uBAAGD,MAAO,CAACiP,UAAW,WAAtB,qC,GAVmB1O,IAAMC,WC0B/BwW,GAAY,GAClBA,GAAU7Y,EAAQC,OAAS,wBAC3B4Y,GAAU7Y,EAAQgB,MAAQ,YAC1B6X,GAAU7Y,EAAQe,UAAY,WAC9B8X,GAAU7Y,EAAQiB,QAAU,YAC5B4X,GAAU7Y,EAAQkB,iBAAmB,gBACrC2X,GAAU7Y,EAAQmB,kBAAoB,aACtC0X,GAAU7Y,EAAQoB,SAAW,UAC7ByX,GAAU7Y,EAAQK,OAAS,iBAC3BwY,GAAU7Y,EAAQO,QAAU,SAC5BsY,GAAU7Y,EAAQc,OAAS,QAC3B+X,GAAU7Y,EAAQa,WAAa,YAC/BgY,GAAU7Y,EAAQM,aAAe,cACjCuY,GAAU7Y,EAAQS,iBAAmB,kBACrCoY,GAAU7Y,EAAQE,MAAQ,OAC1B2Y,GAAU7Y,EAAQG,MAAQ,OAC1B0Y,GAAU7Y,EAAQI,SAAW,UAC7ByY,GAAU7Y,EAAQW,eAAiB,gBACnCkY,GAAU7Y,EAAQY,aAAe,cACjCiY,GAAU7Y,EAAQQ,eAAiB,gBAEnC,IAAMsY,GAAa,GACnBA,GAAW9Y,EAAQC,OAAS2K,EAC5BkO,GAAW9Y,EAAQgB,MAAQ0N,EAC3BoK,GAAW9Y,EAAQe,UAAYgY,EAC/BD,GAAW9Y,EAAQiB,QAAUyR,EAC7BoG,GAAW9Y,EAAQkB,iBAAmBwR,EACtCoG,GAAW9Y,EAAQmB,kBAAoBuR,EACvCoG,GAAW9Y,EAAQoB,SAAWiS,EAC9ByF,GAAW9Y,EAAQK,OAAS2Y,EAC5BF,GAAW9Y,EAAQO,QAAU0Y,EAC7BH,GAAW9Y,EAAQc,OAASoY,EAC5BJ,GAAW9Y,EAAQa,WAAasY,EAChCL,GAAW9Y,EAAQM,aAAe8Y,EAClCN,GAAW9Y,EAAQS,iBAAmB4Y,EACtCP,GAAW9Y,EAAQE,MAAQoZ,EAC3BR,GAAW9Y,EAAQG,MAAQoZ,EAC3BT,GAAW9Y,EAAQI,SAAWoZ,EAC9BV,GAAW9Y,EAAQW,eAAiB8Y,EACpCX,GAAW9Y,EAAQY,aAAe8Y,EAClCZ,GAAW9Y,EAAQQ,eAAiBmZ,G,IA6JrBC,G,kDAvJb,aAAe,IAAD,8BAEZ,gBAqCF9G,gBAvCc,uCAuCI,WAAMjQ,GAAN,iBAAAqE,EAAA,sEACKM,MAAM,UAAY,EAAK5D,MAAMiP,QAAQ7N,IAD1C,cACZ6E,EADY,gBAECA,EAASpB,OAFV,OAEhBoB,EAFgB,OAGVC,EAAMlC,KAAKc,MAAMmB,GACvB,EAAKpH,SAAS,CACZoQ,QAAS/I,EACT/G,KAAMF,IANQ,2CAvCJ,wDAkDdgX,iBAAmB,SAAChX,GAClB,EAAKJ,SAAS,CAACM,KAAMF,KAnDT,EAsDdiX,SAAW,WACT,EAAKrX,SAAS,CAACoC,UAAW,KAvDd,EA0DdkV,UAAY,WACV,EAAKtX,SAAS,CAACoC,UAAW,KA3Dd,EA8DdC,eAAiB,WACf,EAAKrC,UAAS,SAAAC,GAAS,MAAK,CAACmC,UAAWnC,EAAUmC,cA/DtC,EAkEdmV,UAAY,SAACC,GACX,EAAKxX,SAAS,CAAC+F,OAAQyR,EACRC,eAAe,KApElB,EAuEdC,gBAAkB,WAChB,EAAK1X,SAAS,CAAC2X,uBAAuB,KAxE1B,EA4EdC,kBAAoB,WAClB,EAAK5X,SAAS,CAAC2X,uBAAuB,KA7E1B,EAoFdE,gBAAkB,SAACrP,EAAKkB,GAClBA,EACF,EAAK1J,SAAS,CAAC2X,uBAAuB,EACvBlP,UAAWD,EACXlI,KAAM/C,EAAQC,QAE3B,EAAKwC,SAAS,CAAC2X,uBAAuB,EACpClP,UAAWD,KA3FL,EA+FdmB,eAAiB,WACf,EAAK3J,SAAS,CAACyI,UAAW,MA7F1B,EAAKtH,MAAQ,CAACb,KAAM/C,EAAQC,MACd4E,UAAU,EACVqV,eAAe,EACfrH,QAAS,CAAC5N,YAAa,GAAIF,cAAe,IAC1CI,aAAa,EACbiV,uBAAuB,EACvBlP,UAAW,GACXqP,iBAAiB,GAVnB,E,gEAeO,IAAD,OACbxY,KAAK6B,MAAMsW,eAEd1S,MAAM,cACHgT,MAAK,SAAC3Q,GAAD,OAAcA,EAASpB,UAC5B+R,MAAK,SAAC1Q,GACDA,EAAI2Q,iBACN,EAAKhY,SAAS,CACZoQ,QAAS/I,EAAI4Q,KACbR,eAAe,EACfnX,KAAM/C,EAAQgB,Y,+BA0EhB,IAAD,OACD2Z,EAAW7B,GAAW/W,KAAK6B,MAAMb,MACvC,OACE,yBAAKpB,UAAU,eACZI,KAAK6B,MAAM2W,gBACV,kBAAC,EAAD,CAAU9K,MAAO,kBAAM,EAAKhN,SAAS,CAAC8X,iBAAiB,OAAa,KAC7C,IAAxBxY,KAAK6B,MAAMsH,UAAkB,yBAAKvJ,UAAU,cACvC,8BAAOI,KAAK6B,MAAMsH,WAClB,4BAAQvJ,UAAU,cAAcQ,QAASJ,KAAKqK,gBAC1C,0BAAMzK,UAAU,kBAAuC,KAOhEI,KAAK6B,MAAMb,MAAQ/C,EAAQC,OAAS8B,KAAK6B,MAAMb,MAAQ/C,EAAQe,SAAW,KAAK,kBAAC,EAAD,CAC9EiC,UAAW6V,GAAU9W,KAAK6B,MAAMb,MAChCG,OAAQ2V,GAAU7Y,EAAQO,QAC1B0C,YAAa4V,GAAU7Y,EAAQM,aAC/Bsa,MAAO/B,GAAU7Y,EAAQc,OACzB+Z,UAAWhC,GAAU7Y,EAAQa,WAC7Bia,SAAUjC,GAAU7Y,EAAQS,iBAC5BsC,KAAMhB,KAAK6B,MAAMb,KACjBrB,WAAYK,KAAK8X,iBACjBhV,SAAU9C,KAAK6B,MAAMiB,SACrBC,eAAgB/C,KAAK+C,iBACrB,kBAAC,EAAD,CACED,SAAY9C,KAAK6B,MAAMiB,SACvB9B,KAAMhB,KAAK6B,MAAMb,KACjB+B,eAAgB/C,KAAK+C,eACrBG,YAAalD,KAAK6B,MAAMiP,QAAQ5N,YAChCF,cAAehD,KAAK6B,MAAMiP,QAAQ9N,cAClCG,aAAkD,UAApCnD,KAAK6B,MAAMiP,QAAQ9I,aACjC5E,YAAapD,KAAKoY,gBAClB1Y,OAAQ,kBAAM,EAAKoY,iBAAiB7Z,EAAQC,QAC5CmF,UAAW,WAAO,EAAK3C,SAAS,CAAC8X,iBAAiB,OAKpD,kBAACI,EAAD,CACE9V,SAAU9C,KAAK6B,MAAMiB,SACrB9B,KAAMhB,KAAK6B,MAAMb,KACjBrB,WAAYK,KAAK8X,iBACjBhH,QAAS9Q,KAAK6B,MAAMiP,QACpBC,gBAAiB/Q,KAAK+Q,uB,GAnJhB1Q,IAAMC,WC3DJ0Y,QACW,cAA7BlP,OAAOmP,SAASC,UAEe,UAA7BpP,OAAOmP,SAASC,UAEhBpP,OAAOmP,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,MAAK,SAAAkB,GACjCA,EAAaC,kB","file":"static/js/main.b541c251.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    HELP: \"HelpMode\", \r\n    MAIL: \"MailMode\", \r\n    PROFILE: \"ProfileMode\",\r\n    RESET: \"ResetMode\",\r\n    ASSIGNMENTS: \"AssignmentsMode\",\r\n    GRADES: \"GradesMode\",\r\n    USER_SETTINGS: \"UserSettingsMode\",\r\n    COURSE_SETTINGS : \"CourseSettingsMode\",\r\n    CREATE_COURSE: \"CreateCourseMode\", \r\n    DELETE_COURSE: \"DeleteCourseMode\", \r\n    FIND_COURSE: \"FindCourseMode\",\r\n    ANALYTICS: \"AnalyticsMode\",\r\n    USERS: \"UsersMode\",\r\n    REGISTER : \"RegisterMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport '../styles/Dropdown.css';\r\n\r\nclass Dropdown extends React.Component {\r\nconstructor(props){\r\n super(props);\r\n\r\n};\r\n\r\n\r\nlogOut = () =>{\r\n  this.props.changeMode(AppMode.LOGIN);\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div  className=\"modal-dropdown\" role=\"dialog\" style = {{width:\"200px\"}} >\r\n\r\n          { this.props.displayMenu ?  this.props.type == \"profile\" ? (\r\n        <ul className = \"maindropdown\">\r\n         <li className = \"dropitem\"><a className=\"active\" href=\"#View Profile\" onClick={() =>this.props.changeMode(AppMode.MAIL)}>Mail(0)</a></li>\r\n         <li className = \"dropitem\"><a href=\"#Settings\" onClick={() =>this.props.changeMode(AppMode.PROFILE)}>View Profile</a></li>\r\n         <li className = \"dropitem\"><a href=\"#Settings\" onClick={() =>this.props.changeMode(AppMode.USER_SETTINGS)}>Settings</a></li>\r\n         <li className = \"dropitem\" onClick={this.logOut}><a href=\"#Log Out\">Log Out </a></li>\r\n          </ul>\r\n        ):\r\n        (\r\n          <ul className = \"maindropdown\">\r\n           <li className = \"dropitem\"><a className=\"active\" href=\"#Create Page\" onClick={() =>this.props.changeMode(AppMode.FIND_COURSE)}>Find Course</a></li>\r\n           <li className = \"dropitem\"><a href=\"#Create Course\" onClick={() =>this.props.changeMode(AppMode.COURSE_SETTINGS)}>Create Course</a></li>\r\n           <li className = \"dropitem\"><a href=\"#Delete Course\" onClick={() =>this.props.changeMode(AppMode.DELETE_COURSE)}>Delete Course </a></li>\r\n            </ul>\r\n          )\r\n        :\r\n        (\r\n          null\r\n        )\r\n        }\r\n\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport Dropdown from './Dropdown'\r\nimport '../styles/Navbar.css';\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.namewidth = React.createRef()\r\n    this.state = {\r\n      displayMenu: false,\r\n      type: \"\",\r\n      coursedropdown: false,\r\n      userdropdown: false,\r\n    };\r\n\r\n  }\r\n\r\n\r\n  toggleShowDropdown = (newType) => {\r\n    this.setState(prevState => ({ displayMenu: !prevState.displayMenu }));\r\n    this.setType(newType);\r\n  }\r\n\r\n  switchMode = (newMode) => {\r\n    this.props.changeMode(newMode);\r\n  }\r\n\r\n  setType = (newType) => {\r\n    this.setState({ type: newType });\r\n  }\r\n\r\n  renderStudentMode = () => {\r\n    return (\r\n      <div>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n        <span className={this.props.mode == AppMode.FEED ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.FEED)}>\r\n          &nbsp;{this.props.dashboard}&nbsp;\r\n      </span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.ASSIGNMENTS ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.ASSIGNMENTS)}>\r\n          &nbsp;{this.props.assignments}&nbsp;\r\n      </span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.GRADES ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.GRADES)}>\r\n          &nbsp;{this.props.grades}&nbsp;\r\n      </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInstructorMode = () => {\r\n    return (\r\n      <div>\r\n        &nbsp;&nbsp;&nbsp;\r\n        <button className={this.props.mode == AppMode.FEED ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.FEED)}>Dashboard</button>\r\n        <button className={this.props.mode == AppMode.ASSIGNMENTS ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.ASSIGNMENTS)}>Assignments</button>\r\n        <button className={this.props.mode == AppMode.GRADES ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.GRADES)}>Grades</button>\r\n        <button className={this.props.mode == AppMode.USERS ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.USERS)}>Users</button>\r\n        <button className={this.props.mode == AppMode.COURSE_SETTINGS ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.COURSE_SETTINGS)}>Course Settings</button>\r\n        <button className={this.props.mode == AppMode.ANALYTICS ? \"btn btn-primary navbutton selected\" : \"btn btn-primary navbutton\"} onClick={() => this.switchMode(AppMode.ANALYTICS)}>Analytics</button>\r\n      </div>\r\n\r\n      /*\r\n      <div>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n        <span className={this.props.mode == AppMode.FEED ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.FEED)}>\r\n          &nbsp;&nbsp;{this.props.dashboard}&nbsp;\r\n      </span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.ASSIGNMENTS ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.ASSIGNMENTS)}>\r\n          &nbsp;{this.props.assignments}&nbsp;\r\n      </span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.GRADES ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.GRADES)}>\r\n          &nbsp;{this.props.grades}&nbsp;\r\n      </span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.USERS ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.USERS)}>\r\n          &nbsp;{this.props.users}&nbsp;\r\n      </span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.COURSE_SETTINGS ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.COURSE_SETTINGS)}>\r\n          &nbsp;{this.props.settings}&nbsp;\r\n      </span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className={this.props.mode == AppMode.ANALYTICS ? \"navbar-title item-selected\" : \"navbar-title\"} onClick={() => this.switchMode(AppMode.ANALYTICS)}>\r\n          &nbsp;{this.props.analytics}&nbsp;\r\n      </span>\r\n      </div>\r\n      */\r\n\r\n    );\r\n  }\r\n  togglecoursedropdown = () => {\r\n    this.setState(prevstate => ({ coursedropdown: !prevstate.coursedropdown, userdropdown: false }));\r\n  }\r\n  toggleuserdropdown = () => {\r\n    this.setState(prevstate => ({ userdropdown: !prevstate.userdropdown, coursedropdown: false }));\r\n  }\r\n  gotopage = (string) => {\r\n    if (string == \"deletecourse\") {\r\n      this.props.changeMode(AppMode.DELETE_COURSE);\r\n    }\r\n    else if (string == \"findcourse\") {\r\n      this.props.changeMode(AppMode.FIND_COURSE);\r\n    }\r\n    else if (string == \"mail\") {\r\n      this.props.changeMode(AppMode.MAIL);\r\n    }\r\n    else if (string == \"profile\") {\r\n      this.props.changeMode(AppMode.PROFILE);\r\n    }\r\n    else if (string == \"settings\") {\r\n      this.props.changeMode(AppMode.USER_SETTINGS);\r\n    }\r\n    else if (string == \"logout\") {\r\n      this.props.changeMode(AppMode.LOGIN);\r\n    }\r\n    else if (string == \"createcourse\") {\r\n      this.props.changeMode(AppMode.COURSE_SETTINGS);\r\n    }\r\n\r\n    this.setState({\r\n      coursedropdown: false,\r\n      userdropdown: false\r\n    });\r\n  }\r\n  renderRightItems = () => {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary navbutton\" style={{ width: \"7.5rem\" }} onClick={this.togglecoursedropdown}>CPTS 489\r\n        &nbsp;\r\n        <span className={this.state.coursedropdown == true ? \"navbar-title fa fa-angle-left\" : \"navbar-title fa fa-angle-down\"}></span>\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary navbutton\" ref={this.namewidth} onClick={this.toggleuserdropdown}>Leonard Brkanac\r\n        &nbsp;\r\n        <span className={this.state.userdropdown == true ? \"navbar-title fa fa-angle-left\" : \"navbar-title fa fa-angle-down\"}></span></button>\r\n        <button className=\"btn btn-primary navbutton\" onClick={() => this.switchMode(AppMode.MAIL)}>Mail</button>\r\n        <button className=\"btn btn-primary navbutton\" onClick={() => this.switchMode(AppMode.HELP)}>Help</button>\r\n\r\n        {this.state.coursedropdown ?\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", top: \"61px\" }} className=\"mydropdownnav\">\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: \"7.5rem\", borderRadius: \"0px\" }} onClick={() => this.gotopage(\"findcourse\")} >Find Course</button>\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: \"7.5rem\", borderRadius: \"0px\" }} onClick={() => this.gotopage(\"createcourse\")}>Create Course</button>\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: \"7.5rem\", borderRadius: \"0px\" }} onClick={() => this.gotopage(\"deletecourse\")}>Delete Course</button>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n\r\n        {this.state.userdropdown ?\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", top: \"61px\" }} className=\"mydropdownnav moveright\">\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: this.namewidth.current.offsetWidth - 5, borderRadius: \"0px\" }} onClick={() => this.gotopage(\"mail\")}>Mail</button>\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: this.namewidth.current.offsetWidth - 5, borderRadius: \"0px\" }} onClick={() => this.gotopage(\"profile\")}>Profile</button>\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: this.namewidth.current.offsetWidth - 5, borderRadius: \"0px\" }} onClick={() => this.gotopage(\"settings\")}>Settings</button>\r\n            <button className=\"btn btn-primary navdropdown\" style={{ width: this.namewidth.current.offsetWidth - 5, borderRadius: \"0px\" }} onClick={() => this.gotopage(\"logout\")}>Log Out</button>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n      /*\r\n      <div>\r\n        <span className=\"navbar-title\" onClick= {() =>this.toggleShowDropdown(\"course\")}>&nbsp;CptS 489\r\n        <Dropdown \r\n          displayMenu={this.state.displayMenu}\r\n          type={this.state.type}\r\n          changeMode={this.props.changeMode}/>&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-angle-down\">&nbsp;</span>\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n        <img src=\"osble2.png\" height='60' width='60' className=\"navbar-items\"/>\r\n        <span className=\"navbar-title\" onClick= {() =>this.toggleShowDropdown(\"profile\")}>Hermes Obiang \r\n        <Dropdown \r\n          displayMenu={this.state.displayMenu}\r\n          type={this.state.type}\r\n          changeMode={this.props.changeMode}/>&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-angle-down\">&nbsp;&nbsp;</span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n        <span className=\"navbar-title fa fa-envelope\" onClick={() =>this.switchMode(AppMode.MAIL)}>&nbsp;Mail(0)&nbsp;</span>\r\n\r\n        <span>&nbsp;&nbsp;&nbsp;</span>\r\n\r\n        <span className=\"navbar-title fa fa-question-circle\" onClick={() =>this.switchMode(AppMode.HELP)}>&nbsp;Help&nbsp;&nbsp;</span>\r\n      </div>\r\n      */\r\n    );\r\n\r\n  }\r\n\r\n  renderDropdown = () => {\r\n    return (<Dropdown />);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <div className=\"navbar\">\r\n          <span className=\"navbar-items\">\r\n            <img src=\"osble3.png\" alt=\"osble Logo\" height=\"50px\" onClick={() => this.switchMode(AppMode.FEED)} width=\"100px\" className=\"navbar-items\" />\r\n            {/* {this.renderStudentMode()} */}\r\n            {this.renderInstructorMode()}\r\n          </span>\r\n          <span className=\"navbar-items-right\">\r\n            {this.renderRightItems()}\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          {this.props.localAccount ? \r\n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\r\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ||  this.props.mode === AppMode.REGISTER? \r\n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED  || this.props.mode === AppMode.REGISTER? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\r\nimport confirmDeleteAccount from './ConfirmDeleteAccount.js';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.origAccountInfo = null;\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {accountName: \"\",\r\n                      displayName: \"\",\r\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                      password: \"\",\r\n                      passwordRepeat: \"\",\r\n                      securityQuestion: \"\",\r\n                      securityAnswer: \"\",\r\n                      formUpdated: false,\r\n                      confirmDelete: false};\r\n    } \r\n\r\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        if (!this.props.create) {\r\n            //obtain current user data from database and push into state\r\n            const url = \"/users/\" + this.props.userId;\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            const userData = JSON.parse(json);\r\n            this.origAccountInfo = userData; //This determines whether update can occur\r\n            this.origAccountInfo.passwordRepeat = userData.password;\r\n            this.setState({accountName: this.props.userId,\r\n                           displayName: userData.displayName,\r\n                           profilePicURL: userData.profilePicURL,\r\n                           password: userData.password,\r\n                           passwordRepeat: userData.password,\r\n                           securityQuestion: userData.securityQuestion,\r\n                           securityAnswer: userData.securityAnswer});\r\n        }\r\n    }\r\n\r\n    //checkDataValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We first check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    //Second, we check whether anything in the form changed from the original.\r\n    //If so, we update the 'formUpdated' state var, so that the form's submit\r\n    //button is enabled.\r\n    checkDataValidity = () => {\r\n        if (this.state.password != this.state.passwordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match password entered in previous field.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //handleChange--Called when a field in a dialog box form changes.\r\n    handleChange = (event) => {\r\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                               formUpdated: formUpdated},\r\n                               this.checkDataValidity);\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL:  this.result,\r\n                                   formUpdated: formUpdated},this.checkDataValidity);\r\n                });\r\n                \r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value,\r\n                           formUpdated: formUpdated},this.checkDataValidity);\r\n        }\r\n    } \r\n\r\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \r\n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n    //true since this.origAccountInfo is set to null.\r\n    //Should be called whenever the user makes a change to form data.\r\n    formIsUpdated = (updateField,updateVal) => {\r\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\r\n        if (updateField != \"displayName\" && \r\n             this.state.displayName != this.origAccountInfo.displayName) \r\n             {return true;}\r\n        if (updateField != \"profilePicURL\" && \r\n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \r\n             {return true;}\r\n        if (updateField != \"password\" &&\r\n            this.state.password !== this.origAccountInfo.password)\r\n            {return true;}\r\n        if (updateField != \"passwordRepeat\" &&\r\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\r\n            {return true;}\r\n        if (updateField != \"securityQuestion\" &&\r\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\r\n            {return true;}\r\n        if (updateField != \"securityAnswer\" &&\r\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\r\n            {return true;}\r\n        return false;\r\n    }\r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleSubmit -- Triggered when user clicks on submit button to\r\n    //either create or edit account.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        //Initialize user account\r\n        let userData = {\r\n            displayName: this.state.displayName,\r\n            password: this.state.password,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.securityQuestion,\r\n            securityAnswer: this.state.securityAnswer\r\n        };\r\n        const url = '/users/' + this.state.accountName;\r\n        let res;\r\n        if (this.props.create) { //use POST route to create new user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\r\n            } else { //Unsuccessful account creation\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        } else { //use PUT route to update existing user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"User Account Updated!\",false);\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deleteAccount -- Called after confirms account deletion. \r\n    //Uses DELETE server route to perform server deletion. \r\n    //Calls on done with status message and\r\n    //true if delete was succesful, false otherwise.\r\n    deleteAccount = async() => {\r\n       const url = '/users/' + this.state.accountName;\r\n       const res = await fetch(url, \r\n                    {method: 'DELETE'}); \r\n        if (res.status == 200) { //successful account deletion!\r\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\r\n        } else { //Unsuccessful account deletion\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.setState({confirmDelete: false});\r\n    }\r\n\r\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n    //button to indicate intention to delete account. Presents the Confirm\r\n    //Delete dialog box.\r\n    confirmDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        this.setState({confirmDelete: true});\r\n    }\r\n\r\n//     render() {\r\n//     return (  \r\n//     <div className=\"modal\" role=\"dialog\">\r\n//     <div className=\"modal-dialog modal-lg\"></div>\r\n//         <div className=\"modal-content form-center\">\r\n//             <div className=\"modal-header\">\r\n//               <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\r\n//               <button className=\"modal-close\" \r\n//                        onClick={this.props.cancel}>\r\n//                 &times;</button>\r\n//             </div>\r\n//             <div className=\"modal-body\">\r\n//             <form onSubmit={this.handleSubmit}>\r\n//             <label>\r\n//                 Email: \r\n//                 <input  \r\n//                 autocomplete=\"off\"\r\n//                 disabled={!this.props.create}\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"accountName\"\r\n//                 type=\"email\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Enter Email Address\"\r\n//                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n//                 required={true}\r\n//                 ref={this.newUserRef}\r\n//                 value={this.state.accountName}\r\n//                 onChange={this.handleChange}\r\n//                 onBlur={this.setDefaultDisplayName}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Password:\r\n//                 <input\r\n//                 autocomplete=\"off\"\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"password\"\r\n//                 type=\"password\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Enter Password\"\r\n//                 pattern=\r\n//                 \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n//                 required={true}\r\n//                 value={this.state.password}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Repeat Password:\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"passwordRepeat\"\r\n//                 type=\"password\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Repeat Password\"\r\n//                 required={true}\r\n//                 ref={this.repeatPassRef}\r\n//                 value={this.state.passwordRepeat}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Display Name:\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"displayName\"\r\n//                 type=\"text\"\r\n//                 size=\"30\"\r\n//                 placeholder=\"Display Name\"\r\n//                 required={true}\r\n//                 value={this.state.displayName}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Profile Picture:<br/>\r\n//                 <input\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"profilePic\"\r\n//                 type=\"file\"\r\n//                 accept=\"image/x-png,image/gif,image/jpeg\" \r\n//                 ref={this.profilePicRef}\r\n//                 value={this.state.profilePic}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//                 <img src={this.state.profilePicURL != \"\" ? \r\n//                             this.state.profilePicURL :\r\n//                             this.state.profilePicDataURL} \r\n//                         height=\"60\" width=\"60\" \r\n//                  />\r\n//             </label> \r\n//             <br/>\r\n//             <label>\r\n//                 Security Question:\r\n//                 <textarea\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"securityQuestion\"\r\n//                 size=\"35\"\r\n//                 placeholder=\"Security Question\"\r\n//                 rows=\"2\"\r\n//                 cols=\"35\"\r\n//                 maxLength=\"100\"\r\n//                 required={true}\r\n//                 value={this.state.securityQuestion}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             <label>\r\n//                 Answer to Security Question:\r\n//                 <textarea\r\n//                 className=\"form-control form-text form-center\"\r\n//                 name=\"securityAnswer\"\r\n//                 type=\"text\"\r\n//                 placeholder=\"Answer\"\r\n//                 rows=\"2\"\r\n//                 cols=\"35\"\r\n//                 maxLength=\"100\"\r\n//                 required={true}\r\n//                 value={this.state.securityAnswer}\r\n//                 onChange={this.handleChange}\r\n//                 />\r\n//             </label>\r\n//             <br/>\r\n//             {!this.props.create ?  \r\n//             <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\r\n//                 Delete Account...\r\n//             </button> : null}\r\n//             <br/><br/>\r\n//             <button role=\"submit\" \r\n//                 disabled={!this.state.formUpdated}\r\n//                 className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n//                 <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\r\n//                 &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n//             </button>\r\n//             </form>\r\n//             </div>\r\n//         </div>\r\n//         {this.state.confirmDelete ? \r\n//           <ConfirmDeleteAccount email={this.state.accountName}\r\n//                                 deleteAccount={this.deleteAccount}\r\n//                                 close={() => (this.setState({confirmDelete: false}))}\r\n//          /> : null}\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n\r\n}\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from 'react'\r\nimport AppMode from \"../AppMode.js\"\r\n\r\nclass ResetPasswordPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"osblepage\">\r\n                <center>\r\n                    <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{position:\"relative\",right:\".7rem\"}}></img>\r\n                </center>\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                            </h3>\r\n                            <button className=\"modal-close\" \r\n                                onClick={this.props.cancelResetPassword}>\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                            <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                New Password: \r\n                                <input\r\n                                type=\"password\"\r\n                                placeholder=\"Enter new password\"\r\n                                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                                className=\"form-control form-text\"\r\n                                ref={this.resetPasswordRef}\r\n                                />\r\n                            </label>\r\n                            <br></br>\r\n                            <label>\r\n                                Repeat New Password: \r\n                                <input\r\n                                type=\"password\"\r\n                                id=\"repeatPassword\"\r\n                                placeholder=\"Repeat new password\"\r\n                                className=\"form-control form-text\"\r\n                                onKeyUp={this.checkForSubmit}\r\n                                ref={this.resetPasswordRepeatRef}\r\n                                />\r\n                            </label>\r\n                            <br></br>\r\n                            <button role=\"submit\" \r\n                            className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                                <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                            </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordPage;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordPage from './ResetPasswordPage.js';\r\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\r\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\r\nimport './LoginPage.css';\r\nimport AppMode from '../AppMode.js';\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n        this.emailInputRef = React.createRef();\r\n        this.resetUserId = \"\";\r\n        this.resetQ = \"\";\r\n        this.resetA = \"\";\r\n        this.passwordInputRef = React.createRef();\r\n        this.state = {\r\n            statusMsg: \"\",\r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: false,\r\n            githubIcon: \"fa fa-github\",\r\n            githubLabel: \"Sign in with GitHub\",\r\n            loginMsg: \"\",\r\n            newAccountCreated: false\r\n        };\r\n    }\r\n\r\n    //Focus cursor in email input field when mounted\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n    }\r\n\r\n    //handleLoginSubmit -- Called when user clicks on login button.\r\n    handleLoginSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n            loginBtnLabel: \"\"\r\n        });\r\n\r\n        this.props.changeMode(AppMode.FEED);\r\n        // const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n        //     \"&password=\" + this.passwordInputRef.current.value;\r\n        // const res = await fetch(url, { method: 'POST' });\r\n        // if (res.status == 200) { //successful login!\r\n        //     window.open(\"/\", \"_self\");\r\n        // } else { //Unsuccessful login\r\n        //     const resText = await res.text();\r\n        //     this.setState({\r\n        //         loginBtnIcon: \"fa fa-sign-in\",\r\n        //         loginBtnLabel: \"Log In\",\r\n        //         statusMsg: resText\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    //accountCreateDone -- Called by child CreateAccountDialog component when \r\n    //user attempted to create new account. Hide the dialog and display \r\n    //a message indicating result of the attempt.\r\n    accountCreateDone = (msg) => {\r\n        this.setState({\r\n            statusMsg: msg,\r\n            showCreateAccountDialog: false\r\n        });\r\n    }\r\n\r\n    //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n    //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n    cancelCreateAccount = () => {\r\n        this.setState({ showCreateAccountDialog: false });\r\n    }\r\n\r\n    //cancelResetPassword -- Called by one of the child three child dialog box components when\r\n    //the user decides to cancel resetting their password. Toggles state so that all three\r\n    //of the dialog boxes are hidden\r\n    cancelResetPassword = () => {\r\n        this.resetUserId = \"\";\r\n        this.resetQ = \"\";\r\n        this.resetA = \"\";\r\n        this.setState({\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: false\r\n        });\r\n    }\r\n\r\n    //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n    //provider\r\n    handleOAuthLogin = (provider) => {\r\n        window.open(`/auth/${provider}`, \"_self\");\r\n    }\r\n\r\n    //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n    //authenticate via a third-party OAuth service. The name of the provider is\r\n    //passed in as a parameter.\r\n    handleOAuthLoginClick = (provider) => {\r\n        this.setState({\r\n            [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n            [provider + \"Label\"]: \"Connecting...\"\r\n        });\r\n        setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n    }\r\n\r\n    //getSecurityAnswer: Given the id, security question, and security answer obtained\r\n    //from the LookUpAccountDialog component, update state such that the user will\r\n    //next be prompted to enter security question and answer for verification\r\n    getSecurityAnswer = (userId, question, answer) => {\r\n        this.resetUserId = userId;\r\n        this.resetQ = question;\r\n        this.resetA = answer;\r\n        this.setState({\r\n            showLookUpAccountDialog: false,\r\n            showSecurityQuestionDialog: true\r\n        });\r\n    }\r\n\r\n    //getNewPassword-- Called after user successfully provides correct answer\r\n    //to security question. Presents the \"Reset Password\" dialog box.\r\n    getNewPassword = () => {\r\n        this.setState({\r\n            showSecurityQuestionDialog: false,\r\n            showResetPasswordPage: true\r\n        });\r\n    }\r\n\r\n    //resetPassword--Called after the user successfully enters a new (acceptable)\r\n    //password. pw contains the new password. Call on the Update (PUT) server\r\n    //route to update the user's password in the database.\r\n    resetPassword = async (pw) => {\r\n        const url = \"/users/\" + this.resetUserId;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n\r\n            method: 'PUT',\r\n            body: JSON.stringify({ password: pw })\r\n        });\r\n        if (res.status == 200) { //successful update creation!\r\n            this.setState({\r\n                showResetPaswordDialog: false,\r\n                statusMsg: \"Password successfully reset!\"\r\n            });\r\n        } else { //Unsuccessful account creation\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.setState({\r\n                showResetPasswordPage: false,\r\n                statusMsg: resText\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //newAccountCreated -- Called after successful creation of a new account\r\n    accountCreateDone = (msg, deleted) => {\r\n        this.setState({\r\n            statusMsg: msg,\r\n            showCreateAccountDialog: false\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\n    closeStatusMsg = () => {\r\n        this.setState({ statusMsg: \"\" });\r\n    }\r\n\r\n    reset = () => {\r\n        this.props.changeMode(AppMode.RESET)\r\n    }\r\n\r\n\r\n    //cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\n    cancelCreateAccount = () => {\r\n        this.setState({ showCreateAccountDialog: false });\r\n    }\r\n\r\n    signUp = () => {\r\n        this.props.changeMode(AppMode.REGISTER);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"osblepage\">\r\n                <center>\r\n                    <div className=\"wrapper\">\r\n                        \r\n                            <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{ position: \"relative\", right: \".7rem\" }}></img>\r\n                            {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\r\n                                <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                                    <span className=\"fa fa-times\"></span>\r\n                                </button></div> : null}\r\n                            {this.state.showLookUpAccountDialog ?\r\n                                <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\r\n                                    getSecurityAnswer={this.getSecurityAnswer} /> : null}\r\n                            {this.state.showSecurityQuestionDialog ?\r\n                                <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\r\n                                    question={this.resetQ}\r\n                                    answer={this.resetA}\r\n                                    getNewPassword={this.getNewPassword} /> : null}\r\n                            {this.state.showResetPaswordDialog ?\r\n                                <ResetPasswordPage cancelResetPassword={this.cancelResetPassword}\r\n                                    resetPassword={this.resetPassword} /> : null}\r\n                            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n                                <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24, fontWeight: \"500\" }}>\r\n\r\n                                    <input\r\n                                        style={{ backgroundColor: \"white\" }}\r\n                                        ref={this.emailInputRef}\r\n                                        className=\"form-control enterEmail\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        id=\"emailInput\"\r\n                                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                                        required={true}\r\n                                    />\r\n                                </label>\r\n\r\n                                <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24, fontWeight: \"500\" }}>\r\n\r\n                                    <input\r\n                                        ref={this.passwordInputRef}\r\n                                        className=\"form-control enterPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        id=\"passwordInput\"\r\n                                        pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                                        required={true}\r\n                                    />\r\n                                </label>\r\n\r\n                                <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\" btn btn-primary btn-block LoginButton\">\r\n                                    <span id=\"login-btn-icon\" className={this.state.loginBtnIcon} />\r\n                &nbsp;{this.state.loginBtnLabel}\r\n                                </button>\r\n                                <br></br>\r\n                                <p>\r\n                                    <button type=\"button\" className=\"btn btn-link login-link\" id=\"createAccountBtn\"\r\n                                        onClick={this.signUp}>\r\n                                        Create an account</button> |\r\n                <button type=\"button\" className=\"btn btn-link login-link\" id=\"resetBtn\"\r\n                                        onClick={this.reset}>\r\n                                        Reset your password</button>\r\n                                </p>\r\n                                <p>\r\n                                    <i>Version developed by CptS 489 students</i>\r\n                                </p>\r\n                            </form>\r\n                            {this.state.showCreateAccountDialog ?\r\n                                <CreateEditAccountDialog\r\n                                    create={true}\r\n                                    done={this.accountCreateDone}\r\n                                    cancel={this.cancelCreateAccount} /> : null}\r\n                            {this.state.showResetPasswordPage ? <ResetPasswordPage /> : null}\r\n                            </div>\r\n                </center>\r\n            </div>\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nexport default class FeedpostReply extends React.Component {\r\n \r\n    render() {\r\n        return (\r\n            <li key={this.props.key}>\r\n                <div style={{ width: \"98%\", boxShadow: \"0px 1px 5px rgba(0,0,0,0.55)\",borderRadius:\"5px\", margin: \".5rem\" }}>\r\n                    <div style={{ backgroundColor: \"#f5f5f5\",borderRadius:\"5px\" }}><div style={{ padding: \"3px\" }}><div style = {{marginLeft:\".4rem\"}}>{this.props.createdby}</div></div></div>\r\n                    <div style={{ padding: \"3px\", marginLeft: \".4rem\" }}>{this.props.content}</div>\r\n                        \r\n                </div>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n};","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nimport FeedPostReply from './FeedPostReply.js'\r\nexport default class FeedpostItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showReply: false,\r\n            replies: [{ createdby: \"Leonard\", content: \"Example Reply\", key: Date.now() }],\r\n            seeReplies: false\r\n        };\r\n\r\n\r\n    }\r\n\r\n    showReply = (e) => {\r\n        this.setState(prevstate => ({ showReply: !prevstate.showReply }));\r\n    }\r\n    addreply = (e) => {\r\n        var newpost = {\r\n            createdby: \"Leonard\",\r\n            content: this._inputElement.value,\r\n            key: Date.now()\r\n        }\r\n\r\n        this.setState(prevstate => ({ replies: [newpost].concat(prevstate.replies) }));\r\n        this._inputElement.value = \"\";\r\n        this.setState({\r\n            seeReplies: true\r\n        })\r\n        this.showReply();\r\n        e.preventDefault();\r\n    }\r\n    createntries = (entry) => {\r\n        return <FeedPostReply content={entry.content} createdby={entry.createdby} key={entry.key}></FeedPostReply>\r\n    }\r\n    seeReplies = (e) => {\r\n        this.setState(prevstate => ({ seeReplies: !prevstate.seeReplies }));\r\n    }\r\n    render() {\r\n        var JSONreplies = this.state.replies;\r\n        var JSXreplies = JSONreplies.map(this.createntries)\r\n        return (\r\n            <li key={this.props.key}>\r\n\r\n                <div style={{ width: \"98%\", boxShadow: \"0px 1px 5px rgba(0,0,0,0.55)\", margin: \".5rem\", borderRadius: \"5px\" }}>\r\n                    <div style={{ borderRadius: \"5px\", backgroundColor: \"#f5f5f5\" }}>\r\n                        <div style={{ padding: \"3px\" }}><div style={{ marginLeft: \".4rem\" }}>{this.props.createdby}</div></div></div>\r\n                    <div style={{ padding: \"3px\", marginLeft: \".4rem\" }}>{this.props.content}</div>\r\n\r\n                    <form onSubmit={this.addreply}>\r\n                        {\r\n                            this.state.showReply ?\r\n                                <div >\r\n                                    <textarea required={true} ref={(a) => this._inputElement = a} className=\"postinput\" placeholder=\"Enter Reply Here...\" style={{ marginBottom: \"0px\" }}></textarea>\r\n\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            this.state.seeReplies ?\r\n                                <ul style={{ listStyleType: \"none\", padding: \"0px\" }}>\r\n                                    {JSXreplies}\r\n                                </ul>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                            <button type=\"button\" className=\"postitembutton\" onClick={this.showReply}>{this.state.showReply ? \"Cancel\" : \"Reply\"}</button>\r\n                            <button type=\"button\" className=\"postitembutton\" onClick={this.seeReplies} style={{ width: \"8rem\" }}>{this.state.seeReplies ? \"Hide Replies\" : \"Show Replies \"}{this.state.seeReplies ? \"\" : \"(\" + this.state.replies.length + \")\"}</button>\r\n                            {\r\n                                this.state.showReply ?\r\n                                    <button className=\"postitembutton\" style={{ width: \"4rem\" }}>Submit</button>\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport '../styles/FeedPage.css';\r\nimport FeedPostItem from './FeedPostItem.js'\r\nclass FeedPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { // each json object should follow at least this format\r\n            posts: [{ userid:111111111,createdby: \"Leonard\", content: \"Example Post\", key: Date.now() }],\r\n            showdropdown: false,\r\n            curselected: \"Everyone\",\r\n            isanonymous: false,\r\n        };\r\n\r\n\r\n    }\r\n    addpost = (e) => {\r\n        var newpost = {\r\n            createdby: \"Leonard\",\r\n            content: this._inputElement.value,\r\n            key: Date.now()\r\n        }\r\n        if (this.state.isanonymous == true) {\r\n            newpost.createdby = \"Anonymous\"\r\n        }\r\n        this.setState(prevstate => ({ posts: [newpost].concat(prevstate.posts) }));\r\n        this._inputElement.value = \"\";\r\n        e.preventDefault();\r\n    }\r\n    toggledropdown = (e) => {\r\n        this.setState(prevstate => ({ showdropdown: !prevstate.showdropdown }));\r\n\r\n    }\r\n    changeselected = (newfilter) => {\r\n        this.setState({\r\n            curselected: newfilter\r\n        })\r\n        this.toggledropdown();\r\n    }\r\n    setanonymous = (e) => {\r\n        this.setState(prevstate => ({ isanonymous: !prevstate.isanonymous }));\r\n    }\r\n    createntries = (entry) => {\r\n        return <FeedPostItem content={entry.content} createdby={entry.createdby} key={entry.key}></FeedPostItem>\r\n    }\r\n    render() {\r\n        var JSONposts = this.state.posts;\r\n        var JSXposts = JSONposts.map(this.createntries)\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <div className=\"flexwrapper\">\r\n                    <div className=\"notifications\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Notifications</h1>\r\n                        <ul>\r\n                            <li>Notification 1</li>\r\n                            <li>Notification 2</li>\r\n                            <li>Notification 3</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"feed\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Activity Feed</h1>\r\n\r\n                        <form onSubmit={this.addpost}>\r\n                            <textarea required={true} ref={(a) => this._inputElement = a} className=\"postinput\" placeholder=\"Enter new post here...\"></textarea>\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\", height: \"2.5rem\" }}>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" style={{ float: \"left\", marginLeft: \".5rem\" }}>Post</button>\r\n                                <button type=\"button\" onClick={() => this.toggledropdown()} className=\"btn btn-primary\" style={{ float: \"left\", marginLeft: \".5rem\", width: \"10rem\" }}>{this.state.curselected}</button>\r\n                                <input type=\"checkbox\" style={{ marginTop: \".8rem\", marginLeft: \"1rem\" }} onClick={this.setanonymous}></input>\r\n                                <p style={{ marginTop: \".4rem\", marginLeft: \".5rem\" }}>Post Anonymously</p>\r\n                            </div>\r\n                        </form>\r\n                        {this.state.showdropdown ?\r\n                            <div style={{ display: \"flex\", flexDirection: \"column\" }} className=\"mydropdown\">\r\n                                <button className=\"btn btn-primary\" style={{ width: \"10rem\", borderRadius: \"0px\" }} onClick={() => this.changeselected(\"Everyone\")}>Everyone</button>\r\n                                <button className=\"btn btn-primary\" style={{ width: \"10rem\", borderRadius: \"0px\" }} onClick={() => this.changeselected(\"Instructors only\")}>Instructors Only</button>\r\n                            </div>\r\n\r\n                            :\r\n                            null\r\n\r\n                        }\r\n                        \r\n                        <ul style={{ listStyleType: \"none\", padding: \"0px\" ,marginTop:\"1rem\"}}>\r\n                            {JSXposts}\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"files\">\r\n                        <h1 style={{ margin: \".7rem\" ,fontSize:\"30px\"}}>Files</h1>\r\n                        <ul>\r\n                            <li>File 1</li>\r\n                            <li>File 2</li>\r\n                            <li>File 3</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\n\r\nclass ConfirmDeleteRound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete this round?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\r\n                  Yes, Delete</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteRound;","import React from 'react';\r\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {showConfirmDelete: false};\r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\r\n  //button in the Confirm Delete dialog box. It executes the deletion and\r\n  //closes the dialog box.\r\n  deleteRound = () => {\r\n    this.props.deleteRound();\r\n    this.setState({showConfirmDelete: false});\r\n  }\r\n\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({showConfirmDelete: true});\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.showConfirmDelete ?\r\n        <ConfirmDeleteRound \r\n          close={() => this.setState({showConfirmDelete: false})} \r\n          deleteRound={this.deleteRound} /> : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.deleteId = \"\";\r\n        this.editId = \"\";\r\n        this.state = {errorMsg: \"\"};           \r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.setState({errorMsg: \"\"});\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.deleteId]._id;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \r\n            + msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }  \r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.deleteId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.editId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    closeErrorMsg = () => {\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Courses</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\"\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.emailRef = React.createRef();\r\n        this.confirm_emailRef = React.createRef();\r\n        this.passwordRef = React.createRef();\r\n        this.confirm_passwordRef = React.createRef();\r\n        this.fnameRef = React.createRef();\r\n        this.confirm_fnameRef = React.createRef();\r\n        this.lnameRef = React.createRef();\r\n        this.confirm_lnameRef = React.createRef(); \r\n        this.IDRef = React.createRef();\r\n        this.confirmIDRef = React.createRef(); \r\n\r\n        this.state = {\r\n            email: \"\",\r\n            confirm_email: \"\",\r\n            password: \"\",\r\n            confirm_password: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            confirm_last_name: \"\",\r\n            confirm_first_name:\"\",\r\n            school: \"\",\r\n            id: 0,\r\n            confirm_id: 0,\r\n            validated: true,\r\n        };\r\n    }\r\n\r\n    createAccount = () =>{\r\n        this.props.changeMode(AppMode.LOGIN);\r\n    }\r\n\r\n    \r\n\r\n    handleRegister = (event) =>{\r\n        event.preventDefault();\r\n         if(this.state.email == this.state.confirm_email &&\r\n            this.state.password == this.state.confirm_password &&\r\n            this.state.first_name == this.state.confirm_first_name &&\r\n            this.state.last_name == this.state.confirm_last_name &&\r\n            this.state.id == this.state.confirm_id){\r\n            this.createAccount();\r\n        }\r\n        \r\n    }\r\n\r\n    handleOnChange = (event) =>{\r\n        if(event.target.name == \"email\"){\r\n            this.setState({email: event.target.value});\r\n        }\r\n\r\n        else if(event.target.name == \"confirm_email\"){\r\n            this.setState({confirm_email: event.target.value});\r\n        }\r\n        else if(event.target.name == \"password\"){\r\n            this.setState({password: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_password\"){\r\n            this.setState({confirm_password: event.target.value});\r\n        }\r\n        else if(event.target.name == \"first_name\"){\r\n            this.setState({first_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"last_name\"){\r\n            this.setState({last_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_last_name\"){\r\n            this.setState({confirm_last_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_first_name\"){\r\n            this.setState({confirm_first_name: event.target.value});\r\n        }\r\n        else if(event.target.name == \"school\"){\r\n            this.setState({school: event.target.value});\r\n        }\r\n        else if(event.target.name == \"id\"){\r\n            this.setState({id: event.target.value});\r\n        }\r\n        else if(event.target.name == \"confirm_id\"){\r\n            this.setState({confirm_id: event.target.value});\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"osblepage\">\r\n            <center>\r\n            <img src=\"https://i.imgur.com/lBOwYfO.png\" style={{position:\"relative\",right:\".7rem\"}}></img>\r\n            <p className = \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>\r\n            Create a New Account &nbsp; <span className=\"fa fa-question-circle\"></span></p> \r\n            <p className= \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>Login Information</p>\r\n            \r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleRegister}>\r\n            <label className=\"form-label\">\r\n                 Email address  \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"email\"\r\n                 type=\"email\"\r\n                 size=\"35\"\r\n                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                 required={true}\r\n                 ref={this.emailRef}\r\n                onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label className=\"form-label\">\r\n                 Confirm email address  \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_email\"\r\n                 type=\"email\"\r\n                 size=\"35\"\r\n                 pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                 required={true}\r\n                 ref={this.confirm_emailRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label className=\"form-label\">\r\n                 Password\r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"password\"\r\n                 type=\"password\"\r\n                 id=\"passwordReg\"\r\n                 size=\"35\"\r\n                 pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                 required={true}\r\n                 ref={this.passwordRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm password\r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_password\"\r\n                 type=\"password\"\r\n                 size=\"35\"\r\n                 pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                 required={true}\r\n                 ref={this.confirm_passwordRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <p className = \"paragraph\" style={{color: 'white', fontWeight: 'bold'}}>Identification</p>\r\n            <label  className=\"form-label\">\r\n                 First name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"first_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.fnameRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Last name \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"last_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.lnameRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm last name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_last_name\"\r\n                 id=\"confirm_last_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirm_lnameRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm first name \r\n                 <input  style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center\"\r\n                 name=\"confirm_first_name\"\r\n                 type=\"text\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirm_fnameRef}\r\n                 onChange={this.handleOnChange} />\r\n            </label>\r\n            <p className = \"paragraph form-label\">School Information</p>\r\n            <p style={{color: 'white'}}>Don't see your school in the list? Request that it be added</p>\r\n            <label  className=\"form-label\">\r\n            <select name=\"school\" style={{width:\"600px\"}}\r\n            className=\"form-control form-center\" onChange={this.handleOnChange}>\r\n            <option value=\"Washington State University\">Washington State University</option>\r\n            <option value=\"University of Washington\">University of Washington</option>\r\n            <option value=\"Western Washington University\">Western Washington University</option>\r\n            <option value=\"Seattle University\">Seattle University</option>\r\n          </select>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Student, Faculty, or Staff ID Number \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text\"\r\n                 name=\"id\"\r\n                 type=\"number\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.IDRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br/>\r\n            <label  className=\"form-label\">\r\n                 Confirm Student, Faculty, or Staff ID Number \r\n                 <input style={{width:\"600px\"}}\r\n                 autocomplete=\"off\"\r\n                 className=\"form-control form-text form-center formSize\"\r\n                 name=\"confirm_id\"\r\n                 type=\"number\"\r\n                 size=\"35\"\r\n                 required={true}\r\n                 ref={this.confirmIDRef}\r\n                 onChange={this.handleOnChange}/>\r\n            </label>\r\n            <br></br>\r\n            <button className=\"register-btn\" role=\"submit\" type=\"submit\">Register</button>\r\n            </form>\r\n            </div>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default RegisterPage;","import React from 'react'\r\n// Code from https://medium.com/@subalerts/create-dynamic-table-from-json-in-react-js-1a4a7b1146ef\r\nexport default class GradeTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n        this.getKeys = this.getKeys.bind(this);\r\n    }\r\n\r\n    getKeys = function () {\r\n        return Object.keys(this.props.data[0]);\r\n    }\r\n\r\n    getHeader = function () {\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index) => {\r\n            return <th key={key}>{key.toUpperCase()}</th>\r\n        })\r\n\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.props.data;\r\n        var keys = this.getKeys();\r\n        return items.map((row, index) => {\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>{this.getHeader()}</tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.getRowsData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst RenderRow = (props) => {\r\n\r\n    return props.keys.map((key, index) => {\r\n        return <td key={props.data[key]}>{props.data[key]}</td>\r\n    })\r\n\r\n}\r\n","import React from 'react';\r\nimport GradeTable from './GradeTable'\r\n\r\nclass GradesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {'ID':'Total:', 'Student': '', 'Assignment 1': 100, 'Assignment 2': 100},\r\n                {'ID': '11645278', 'Student': 'Sean', 'Assignment 1': 100, 'Assignment 2': 95},\r\n                {'ID': '11111111', 'Student': 'John', 'Assignment 1': 95, 'Assignment 2': 95}\r\n                \r\n            ],\r\n            hasGradebook : true\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <center>\r\n                    <h1>Gradebook </h1>\r\n                    <button id=\"gbOptions\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#gbOptionsModal\">Gradebook Options</button>\r\n                    {/* <div id=\"gbOptionsModal\" class=\"modal fade\" role=\"dialog\">\r\n                        <div class=\"modal-dialog\">\r\n\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\r\n                                    <h4 class=\"modal-title\">Gradebook Options</h4>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"options\">\r\n                                        <form enctype=\"multipart/form-data\" method=\"post\" action=\"/Gradebook/DeleteAllGradebooks\" id=\"delete_submit\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary \"> Delete All Gradebooks</button>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div class=\"options\">\r\n                                        <form enctype=\"multipart/form-data\" method=\"post\" action=\"/Gradebook/DownloadGradebook\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary \"> Download Gradebook (Zipped CSVs)</button>\r\n                                        </form>\r\n                                        <br>\r\n                                            <form enctype=\"multipart/form-data\" method=\"post\" action=\"/Gradebook/DownloadGradebookXLSX\">\r\n                                                <button type=\"submit\" class=\"btn btn-primary \"> Download Gradebook (Excel XLSX)</button>\r\n                                            </form>\r\n                                        </br>\r\n                                    </div>\r\n                                    <div class=\"options uForm\">\r\n\r\n                                        <form id=\"upload_gradebook\" enctype=\"multipart/form-data\" method=\"post\" action=\"/Gradebook/UploadGradebook\">\r\n                                            <div class=\"form-group\">\r\n                                                <input class=\"file\" type=\"file\" id=\"file\" name=\"file\" onchange=\"check_extension(this.value)\"></input>\r\n                                                <div class=\"input-group \">\r\n                                                    <input type=\"text\" class=\"form-control input-lg\" disabled=\"\" placeholder=\"Upload .csv or .zip containing multiple .csv\"></input>\r\n                                                    <span class=\"input-group-btn\">\r\n                                                        <button class=\"browse btn btn-primary input-lg\" type=\"button\"><i class=\"\"></i> Upload<br>Gradebook(s)</br></button>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <span id=\"errorMsg\"></span>\r\n                                                </div>\r\n                                                <input class=\"btn btn-primary\" id=\"upload\" type=\"submit\" value=\"Upload Selected Gradebook(s)\" disabled=\"disabled\"></input>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n */}\r\n                    {/* <h3>No Gradebook Uploaded.</h3> */}\r\n                    {/* <h1 >Grades</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p> */}\r\n                <GradeTable data={this.state.data}/>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GradesPage;","import React from \"react\";\r\n\r\nexport default class Assignment extends React.Component {\r\n    //style={{position:\"absolute\",left:\"10rem\"}}\r\n    render() {\r\n        return (\r\n            <tr key={this.props.key} style={{ borderBottom: \"1px solid #dee2e6\" }}>\r\n                \r\n                <td >{<div style={{ marginTop: \"1rem\",marginLeft:\".8rem\" }}>{this.props.assignment}</div>}</td>\r\n                <td >{<div style={{ marginTop: \"1rem\" }}>{this.props.duedate}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".35rem\" }}>{this.props.didsubmit ? <button style={{width:\"5rem\",marginLeft:\"0px\"}} className=\"postitembutton\" >Resubmit</button>:<button style={{width:\"5rem\",marginLeft:\"0px\"}} className=\"postitembutton\" >Submit</button>}</div>}</td>\r\n                <td>{<div style={{ marginTop: \"1rem\" }}>{this.props.latestactivity}</div>}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n};","import React from \"react\";\r\nimport '../styles/FeedItem.css';\r\nimport Assignment from './Assignment.js'\r\nexport default class AssignmentsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assignments: [ // the json object should lbe formatted like this\r\n                { assignment: \"Assignment 1\", duedate: \"11/18/2020 11:59 PM\", didsubmit: false, latestactivity: \"\" },\r\n                { assignment: \"Assignment 2\", duedate: \"11/23/2020 11:59 PM\", didsubmit: true, latestactivity: \"Submitted 11/18/2020 10:43 PM\" }\r\n\r\n            ]\r\n        };\r\n\r\n\r\n    }\r\n    createntries = (entry) => {\r\n        return <Assignment assignment={entry.assignment} duedate={entry.duedate} didsubmit={entry.didsubmit} latestactivity={entry.latestactivity}></Assignment>\r\n    }\r\n    render() {\r\n        var JSONassignments = this.state.assignments;\r\n        var JSXassignments = JSONassignments.map(this.createntries)\r\n        return (\r\n            <div className = \"feedpage\">\r\n                <h1 style={{ margin: \"1.5rem\", fontSize: \"30px\" }}>Assignments</h1>\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th style={{ width: \"25rem\", paddingLeft: \"1.5rem\" }}>Assignment</th>\r\n                            <th>Due Date</th>\r\n                            <th>Actions</th>\r\n                            <th>Latest Activity</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {JSXassignments}\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\n\r\nclass AnalyticsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Analytics</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default AnalyticsPage;","import React from 'react';\r\n\r\nclass CourseSettingsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Course Settings</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CourseSettingsPage;","import React from 'react'\r\n\r\nexport default class UsersList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data :  props.data,\r\n            type : props.type\r\n\r\n        \r\n            } \r\n            \r\n            this.getListData = this.getListData.bind(this);\r\n            this.getKeys = this.getKeys.bind(this);\r\n    }\r\n    getKeys = function () {\r\n        return Object.keys(this.props.data);\r\n    }\r\n    getListData = function () {\r\n        var keys = this.getKeys();\r\n        var items = this.state.data;\r\n        return keys.map((userId, index) =>{\r\n            return  <RenderListItem uID = {userId} userName = {items[userId]} key = {index}/> \r\n        })\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"w3-container\">\r\n                <h1>{this.state.type}</h1>\r\n                <table className=\"table table-hover\">\r\n                    <thead  className=\"thead-light\"><tr>\r\n                        <td>Name </td>\r\n                        <td>ID </td>\r\n                        </tr>\r\n                        </thead>\r\n                    <tbody>{this.getListData()}</tbody>\r\n             \r\n            </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst RenderListItem = (props) => {\r\n        var boxName = 'userRow'+props.uID;\r\n    \r\n        return <tr key={props.key} name = {boxName}>\r\n            <td>{props.userName}</td>\r\n            <td>{props.uID}</td>\r\n            <td><button class=\"btn btn-primary\">Change Role</button>\r\n            <button class=\"btn btn-primary\">Message</button>\r\n            <button class=\"btn btn-primary\">Remove</button>\r\n            </td>\r\n        </tr>\r\n\r\n}","import React from 'react';\r\nimport UsersList from './UsersList'\r\nclass UsersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:\r\n            {\r\n                'Instructors': { 1: \"Hermes\", 2: \"Jacob\" },\r\n                'TAs': { 3: \"Joe\", 4: \"Kyle\" },\r\n                'Students': { 5: \"Sean\", 6: \"John\" }\r\n\r\n\r\n            }\r\n\r\n            ,\r\n            courseId: 1\r\n\r\n        }\r\n        this.getUserLists = this.getUserLists.bind(this);\r\n    }\r\n\r\n    getUserLists = function () {\r\n        var roles = Object.keys(this.state.data);\r\n        var classData = this.state.data;\r\n        return roles.map((role, index) => {\r\n            return <UsersList data={classData[role]} type={role} />\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <center>\r\n                    <h1> Roster</h1>\r\n\r\n\r\n                    <div id=\"add_update_users\" style={{ display: 'block' }}>\r\n                        <h4>\r\n                            Add Single User\r\n                        </h4>\r\n                        <div>\r\n                            <a href=\"/Roster/Create\">Add By School ID</a>&nbsp;&nbsp;\r\n                <a href=\"/Roster/CreateByEmail\">Add By Email</a>&nbsp;&nbsp;\r\n            </div>\r\n                    </div>\r\n                    {this.getUserLists()}\r\n\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersPage;","import React from 'react';\r\nclass HelpPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Help</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default HelpPage;","import React from 'react';\r\nclass MailPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <center>\r\n                    <h1 >Inbox</h1>\r\n                    <div class=\"btn-group\" id=\"mail_menu\">\r\n                        <a class=\"btn btn-primary\" >Compose</a>\r\n                        <a class=\"btn btn-primary\" >Inbox</a>\r\n                        <a class=\"btn btn-primary\" > Outbox</a>\r\n                        <input id=\"FormSubmitButton\" type=\"submit\" class=\"btn btn-primary\" disabled=\"disabled\" value=\"Delete\" />\r\n                    </div>\r\n                    <div class=\"MailContent\">\r\n\r\n                        <table class=\"inbox_table table table-hover\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th style={{textAlign: 'center'}} id=\"checkAll\" class=\"inbox_checkbox_header\"><input id=\"checkAllBox\" type=\"checkbox\" /></th>\r\n                                    <th class=\"inbox_attachments_header\"></th>\r\n                                    <th class=\"inbox_time_header\"><a >Date:</a></th>\r\n                                    <th class=\"inbox_context_header\"><a >Context:</a></th>\r\n                                    <th class=\"inbox_from_header\"><a >From:</a></th>\r\n                                    <th class=\"inbox_subject_header\"><a >Subject:</a></th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n\r\n                            <tbody><tr id=\"mail_item_7417\" class=\"\">\r\n                                <td style ={{textAlign: 'center'}}><input id=\"7417\" class=\"mailCheckBoxClass\" name=\"mailItem_7417\" type=\"checkbox\" /></td>\r\n                                <td class=\"inbox_attachments\">\r\n                                </td>\r\n                                <td class=\"inbox_time\">\r\n                                    <time class=\"course-local-time\" datetime=\"1510173928\" data-original-date=\"11/8/17 08:45 PM\" data-date-format=\"MM/DD/YYYY hh:mm A\">11/08/2017 12:45 PM</time>\r\n                                </td>\r\n                                <td class=\"inbox_context\">\r\n                                    CPTS 121\r\n                                </td>\r\n                                <td class=\"inbox_from\">\r\n                                    Eli Forbes\r\n                                </td>\r\n                                <td class=\"inbox_subject\">\r\n                                    <a href=\"/Mail/View/7417\">Exam 2 Graded</a>\r\n                                </td>\r\n                            </tr>\r\n\r\n\r\n\r\n                            </tbody></table>\r\n                    </div>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MailPage;","import React from 'react';\r\nclass ProfilePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Profile</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nclass DeleteCoursePage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >Delete Course</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default DeleteCoursePage;","import React from \"react\";\r\n\r\nexport default class Course extends React.Component {\r\n    //style={{position:\"absolute\",left:\"10rem\"}}\r\n    render() {\r\n        return (\r\n            <tr key={this.props.key} style={{ borderBottom: \"1px solid #dee2e6\" }}>\r\n                <td><button className=\"postitembutton\" >+</button></td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.coursename}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.coursenumber}</div>}</td>\r\n                <td >{<div style={{ marginTop: \".7rem\" }}>{this.props.semester}</div>}</td>\r\n                <td>{<div style={{ marginTop: \".7rem\" }}>{this.props.instructor}</div>}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport Course from './Course.js'\r\nclass FindCoursePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            courses: [ // the json object should lbe formatted like this\r\n                { coursename: \"Introduction to Parallel Computing\", coursenumber: \"CPTS 411\", semester: \"Fall 2020\", instructor: \"Ananth Kalyanaraman\" },\r\n                { coursename: \"Web Development\", coursenumber: \"CPTS 489\", semester: \"Fall 2020\", instructor: \"Chris Handhousen\" },\r\n                { coursename: \"Introduction to Data Mining\", coursenumber: \"CPTS 315\", semester: \"Fall 2020\", instructor: \"Ananth Jillepalli\" },\r\n            ]\r\n        };\r\n\r\n\r\n    }\r\n    createntries = (entry) => {\r\n        return <Course coursename={entry.coursename} coursenumber={entry.coursenumber} semester={entry.semester} instructor={entry.instructor}></Course>\r\n    }\r\n    render() {\r\n        var JSONcourses = this.state.courses;\r\n        var JSXcourses = JSONcourses.map(this.createntries)\r\n        return (\r\n            <div className=\"feedpage\">\r\n                <h1 style={{ margin: \"1.5rem\", fontSize: \"30px\" }}>Search For Courses</h1>\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th style={{width:\"7rem\",paddingLeft:\"1.5rem\"}}>Join</th>\r\n                            <th>Course Name</th>\r\n                            <th>Course Number</th>\r\n                            <th>Semester</th>\r\n                            <th>Instructor</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {JSXcourses}\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindCoursePage;","import React from 'react';\r\nclass UserSettingsPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"feedpage\">\r\n            <center>\r\n            <h1 >User Setings</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"osble2.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default UserSettingsPage;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AboutBox from './AboutBox.js';\r\nimport Register from './RegisterPage'\r\nimport ResetPassword from './ResetPasswordPage'\r\nimport Grades from './GradesPage'\r\nimport Assignments from './AssignmentsPage'\r\nimport Analytics from './AnalyticsPage'\r\nimport CourseSettings from './CourseSettingsPage'\r\nimport Users from './UsersPage'\r\nimport Help from './HelpPage'\r\nimport Mail from './MailPage'\r\nimport Profile from './ProfilePage'\r\nimport DeleteCourse from './DeleteCoursePage'\r\nimport FindCourse from './FindCoursePage'\r\nimport UserSettings from './UserSettingsPage'\r\n\r\n\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Dashboard\";\r\nmodeTitle[AppMode.REGISTER] = \"Register\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Courses\";\r\nmodeTitle[AppMode.RESET] = \"Reset Password\";\r\nmodeTitle[AppMode.GRADES] = \"Grades\";\r\nmodeTitle[AppMode.USERS] = \"Users\";\r\nmodeTitle[AppMode.ANALYTICS] = \"Analytics\";\r\nmodeTitle[AppMode.ASSIGNMENTS] = \"Assignments\";\r\nmodeTitle[AppMode.COURSE_SETTINGS] = \"Course Settings\";\r\nmodeTitle[AppMode.HELP] = \"Help\";\r\nmodeTitle[AppMode.MAIL] = \"Mail\";\r\nmodeTitle[AppMode.PROFILE] = \"Profile\";\r\nmodeTitle[AppMode.DELETE_COURSE] = \"Delete Course\";\r\nmodeTitle[AppMode.FIND_COURSE] = \"Find Course\";\r\nmodeTitle[AppMode.USER_SETTINGS] = \"User Settings\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.REGISTER] = Register;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.RESET] = ResetPassword;\r\nmodeToPage[AppMode.GRADES] = Grades;\r\nmodeToPage[AppMode.USERS] = Users;\r\nmodeToPage[AppMode.ANALYTICS] = Analytics;\r\nmodeToPage[AppMode.ASSIGNMENTS] = Assignments;\r\nmodeToPage[AppMode.COURSE_SETTINGS] = CourseSettings;\r\nmodeToPage[AppMode.HELP] = Help;\r\nmodeToPage[AppMode.MAIL] = Mail;\r\nmodeToPage[AppMode.PROFILE] = Profile;\r\nmodeToPage[AppMode.DELETE_COURSE] = DeleteCourse;\r\nmodeToPage[AppMode.FIND_COURSE] = FindCourse;\r\nmodeToPage[AppMode.USER_SETTINGS] = UserSettings;\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    \r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  statusMsg: \"\",\r\n                  showAboutDialog: false\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.FEED //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  showEditAccount = () => {\r\n    this.setState({showEditAccountDialog: true});\r\n\r\n  }\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({showEditAccountDialog: false});\r\n  }\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({showEditAccountDialog: false,\r\n                     statusMsg: msg,\r\n                     mode: AppMode.LOGIN});\r\n      } else {\r\n        this.setState({showEditAccountDialog: false,\r\n          statusMsg: msg});\r\n      }\r\n  }\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {this.state.showAboutDialog ? \r\n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                  <span className=\"fa fa-times\"></span></button></div> : null}\r\n        {/* {this.state.showEditAccountDialog ? \r\n            <CreateEditAccountDialog \r\n              create={false} \r\n              userId={this.state.userObj.id} \r\n              done={this.editAccountDone} \r\n              cancel={this.cancelEditAccount}/> : null} */}\r\n        {this.state.mode == AppMode.LOGIN || this.state.mode == AppMode.REGISTER ? null:<NavBar \r\n          dashboard={modeTitle[this.state.mode]}\r\n          grades={modeTitle[AppMode.GRADES]} \r\n          assignments={modeTitle[AppMode.ASSIGNMENTS]}\r\n          users={modeTitle[AppMode.USERS]}\r\n          analytics={modeTitle[AppMode.ANALYTICS]}\r\n          settings={modeTitle[AppMode.COURSE_SETTINGS]}   \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>}\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            editAccount={this.showEditAccount}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\r\n          {/* <ModeBar \r\n            mode={this.state.mode} \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}/> */}\r\n          <ModePage \r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}